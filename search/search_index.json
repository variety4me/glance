{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>What if you could see everything at a...</p> Glance <p>Install \u2022 Configuration \u2022 Discord \u2022 Sponsor</p> <p>Community widgets \u2022 Preconfigured pages \u2022 Themes</p> <p></p>"},{"location":"#features","title":"Features","text":""},{"location":"#various-widgets","title":"Various widgets","text":"<ul> <li>RSS feeds</li> <li>Subreddit posts</li> <li>Hacker News posts</li> <li>Weather forecasts</li> <li>YouTube channel uploads</li> <li>Twitch channels</li> <li>Market prices</li> <li>Docker containers status</li> <li>Server stats</li> <li>Custom widgets</li> <li>and many more...</li> </ul>"},{"location":"#fast-and-lightweight","title":"Fast and lightweight","text":"<ul> <li>Low memory usage</li> <li>Few dependencies</li> <li>Minimal vanilla JS</li> <li>Single &lt;20mb binary available for multiple OSs &amp; architectures and just as small Docker container</li> <li>Uncached pages usually load within ~1s (depending on internet speed and number of widgets)</li> </ul>"},{"location":"#tons-of-customizability","title":"Tons of customizability","text":"<ul> <li>Different layouts</li> <li>As many pages/tabs as you need</li> <li>Numerous configuration options for each widget</li> <li>Multiple styles for some widgets</li> <li>Custom CSS</li> </ul>"},{"location":"#optimized-for-mobile-devices","title":"Optimized for mobile devices","text":"<p>Because you'll want to take it with you on the go.</p> <p></p>"},{"location":"#themeable","title":"Themeable","text":"<p>Easily create your own theme by tweaking a few numbers or choose from one of the already available themes.</p> <p></p> <p></p>"},{"location":"#configuration","title":"Configuration","text":"<p>Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the configuration documentation.</p> Preview example configuration file <pre><code>pages:\n  - name: Home\n    columns:\n      - size: small\n        widgets:\n          - type: calendar\n            first-day-of-week: monday\n\n          - type: rss\n            limit: 10\n            collapse-after: 3\n            cache: 12h\n            feeds:\n              - url: https://selfh.st/rss/\n                title: selfh.st\n                limit: 4\n              - url: https://ciechanow.ski/atom.xml\n              - url: https://www.joshwcomeau.com/rss.xml\n                title: Josh Comeau\n              - url: https://samwho.dev/rss.xml\n              - url: https://ishadeed.com/feed.xml\n                title: Ahmad Shadeed\n\n          - type: twitch-channels\n            channels:\n              - theprimeagen\n              - j_blow\n              - piratesoftware\n              - cohhcarnage\n              - christitustech\n              - EJ_SA\n\n      - size: full\n        widgets:\n          - type: group\n            widgets:\n              - type: hacker-news\n              - type: lobsters\n\n          - type: videos\n            channels:\n              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips\n              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling\n              - UCsBjURrPoezykLs9EqgamOA # Fireship\n              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee\n              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium\n\n          - type: group\n            widgets:\n              - type: reddit\n                subreddit: technology\n                show-thumbnails: true\n              - type: reddit\n                subreddit: selfhosted\n                show-thumbnails: true\n\n      - size: small\n        widgets:\n          - type: weather\n            location: London, United Kingdom\n            units: metric\n            hour-format: 12h\n\n          - type: markets\n            markets:\n              - symbol: SPY\n                name: S&amp;P 500\n              - symbol: BTC-USD\n                name: Bitcoin\n              - symbol: NVDA\n                name: NVIDIA\n              - symbol: AAPL\n                name: Apple\n              - symbol: MSFT\n                name: Microsoft\n\n          - type: releases\n            cache: 1d\n            repositories:\n              - glanceapp/glance\n              - go-gitea/gitea\n              - immich-app/immich\n              - syncthing/syncthing\n</code></pre> <p></p>"},{"location":"#installation","title":"Installation","text":"<p>Choose one of the following methods:</p> Docker compose using provided directory structure (recommended)   Create a new directory called `glance` as well as the template files within it by running:  <pre><code>mkdir glance &amp;&amp; cd glance &amp;&amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2\n</code></pre>  *[click here to view the files that will be created](https://github.com/glanceapp/docker-compose-template/tree/main/root)*  Then, edit the following files as desired: * `docker-compose.yml` to configure the port, volumes and other containery things * `config/home.yml` to configure the widgets or layout of the home page * `config/glance.yml` if you want to change the theme or add more pages   Other files you may want to edit  * `.env` to configure environment variables that will be available inside configuration files * `assets/user.css` to add custom CSS   When ready, run:  <pre><code>docker compose up -d\n</code></pre>  If you encounter any issues, you can check the logs by running:  <pre><code>docker compose logs\n</code></pre> Docker compose manual   Create a `docker-compose.yml` file with the following contents:  <pre><code>services:\n  glance:\n    container_name: glance\n    image: glanceapp/glance\n    restart: unless-stopped\n    volumes:\n      - ./config:/app/config\n    ports:\n      - 8080:8080\n</code></pre>  Then, create a new directory called `config` and download the example starting [`glance.yml`](https://github.com/glanceapp/glance/blob/main/docs/glance.yml) file into it by running:  <pre><code>mkdir config &amp;&amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml\n</code></pre>  Feel free to edit the `glance.yml` file to your liking, and when ready run:  <pre><code>docker compose up -d\n</code></pre>  If you encounter any issues, you can check the logs by running:  <pre><code>docker logs glance\n</code></pre> Manual binary installation   Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).  ### Linux  Visit the [latest release page](https://github.com/glanceapp/glance/releases/latest) for available binaries. You can place the binary in `/opt/glance/` and have it start with your server via a [systemd service](https://linuxhandbook.com/create-systemd-services/). By default, when running the binary, it will look for a `glance.yml` file in the directory it's placed in. To specify a different path for the config file, use the `--config` option:  <pre><code>/opt/glance/glance --config /etc/glance.yml\n</code></pre>  To grab a starting template for the config file, run:  <pre><code>wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml\n</code></pre>  ### Windows  Download and extract the executable from the [latest release](https://github.com/glanceapp/glance/releases/latest) (most likely the file called `glance-windows-amd64.zip` if you're on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called `glance.yml` in the same folder and paste the content from [here](https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml) in it. You should then be able to run the executable and access the dashboard by visiting `http://localhost:8080` in your browser.     Other   Glance can also be installed through the following 3rd party channels: * [Proxmox VE Helper Script](https://community-scripts.github.io/ProxmoxVE/scripts?id=glance) * [NixOS package](https://search.nixos.org/packages?channel=unstable&amp;show=glance) * [Coolify.io](https://coolify.io/docs/services/glance/)   <p></p>"},{"location":"#common-issues","title":"Common issues","text":"Requests timing out  The most common cause of this is when using Pi-Hole, AdGuard Home or other ad-blocking DNS services, which by default have a fairly low rate limit. Depending on the number of widgets you have in a single page, this limit can very easily be exceeded. To fix this, increase the rate limit in the settings of your DNS service.  If using Podman, in some rare cases the timeout can be caused by an unknown issue, in which case it may be resolved by adding the following to the bottom of your `docker-compose.yml` file: <pre><code>networks:\n  podman:\n    external: true\n</code></pre> Broken layout for markets, bookmarks or other widgets  This is almost always caused by the browser extension Dark Reader. To fix this, disable dark mode for the domain where Glance is hosted.  cannot unmarshal !!map into []glance.page  The most common cause of this is having a `pages` key in your `glance.yml` and then also having a `pages` key inside one of your included pages. To fix this, remove the `pages` key from the top of your included pages."},{"location":"#faq","title":"FAQ","text":"Does the information on the page update automatically? No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened.  How frequently do widgets update? No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured.  Can I create my own widgets?  Yes, there are multiple ways to create custom widgets: * `iframe` widget - allows you to embed things from other websites * `html` widget - allows you to insert your own static HTML * `extension` widget - fetch HTML from a URL * `custom-api` widget - fetch JSON from a URL and render it using custom HTML  Can I change the title of a widget?  Yes, the title of all widgets can be changed by specifying the `title` property in the widget's configuration:  <pre><code>- type: rss\n  title: My custom title\n\n- type: markets\n  title: My custom title\n\n- type: videos\n  title: My custom title\n\n# and so on for all widgets...\n</code></pre>"},{"location":"#feature-requests","title":"Feature requests","text":"<p>New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so here.</p> <p>Feature requests are tagged with one of the following:</p> <ul> <li>Roadmap - will be implemented in a future release</li> <li>Backlog - may be implemented in the future but needs further feedback or interest from the community</li> <li>Icebox - no plans to implement as it doesn't currently align with the project's goals or capabilities, may be revised at a later date</li> </ul> <p></p>"},{"location":"#building-from-source","title":"Building from source","text":"<p>Choose one of the following methods:</p> Build binary with Go   Requirements: [Go](https://go.dev/dl/) &gt;= v1.23  To build the project for your current OS and architecture, run:  <pre><code>go build -o build/glance .\n</code></pre>  To build for a specific OS and architecture, run:  <pre><code>GOOS=linux GOARCH=amd64 go build -o build/glance .\n</code></pre>  [*click here for a full list of GOOS and GOARCH combinations*](https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH)  Alternatively, if you just want to run the app without creating a binary, like when you're testing out changes, you can run:  <pre><code>go run .\n</code></pre> Build project and Docker image with Docker   Requirements: [Docker](https://docs.docker.com/engine/install/)  To build the project and image using just Docker, run:  *(replace `owner` with your name or organization)*  <pre><code>docker build -t owner/glance:latest .\n</code></pre>  If you wish to push the image to a registry (by default Docker Hub), run:  <pre><code>docker push owner/glance:latest\n</code></pre> <p></p>"},{"location":"#contributing-guidelines","title":"Contributing guidelines","text":"<ul> <li>Before working on a new feature it's preferable to submit a feature request first and state that you'd like to implement it yourself</li> <li>Please don't submit PRs for feature requests that are either in the roadmap<sup>[1]</sup>, backlog<sup>[2]</sup> or icebox<sup>[3]</sup></li> <li>Use <code>dev</code> for the base branch if you're adding new features or fixing bugs, otherwise use <code>main</code></li> <li>Avoid introducing new dependencies</li> <li>Avoid making backwards-incompatible configuration changes</li> <li>Avoid introducing new colors or hard-coding colors, use the standard <code>primary</code>, <code>positive</code> and <code>negative</code></li> <li>For icons, try to use heroicons where applicable</li> <li>Provide a screenshot of the changes if UI related where possible</li> <li>No <code>package.json</code></li> </ul> <sup>[1] [2] [3]</sup>  [1] The feature likely already has work put into it that may conflict with your implementation  [2] The demand, implementation or functionality for this feature is not yet clear  [3] No plans to add this feature for the time being"},{"location":"#thank-you","title":"Thank you","text":"<p>To all the people who were generous enough to sponsor the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.</p>"},{"location":"calendar-clock/","title":"Clock & Calendar","text":""},{"location":"calendar-clock/#clock","title":"Clock","text":"<p>Display a clock showing the current time and date. Optionally, also display the the time in other timezones.</p> <p>Example:</p> <pre><code>- type: clock\n  hour-format: 24h\n  timezones:\n    - timezone: Europe/Paris\n      label: Paris\n    - timezone: America/New_York\n      label: New York\n    - timezone: Asia/Tokyo\n      label: Tokyo\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"calendar-clock/#properties","title":"Properties","text":"Name Type Required Default hour-format string no 24h timezones array no"},{"location":"calendar-clock/#hour-format","title":"<code>hour-format</code>","text":"<p>Whether to show the time in 12 or 24 hour format. Possible values are <code>12h</code> and <code>24h</code>.</p>"},{"location":"calendar-clock/#properties-for-each-timezone","title":"Properties for each timezone","text":"Name Type Required Default timezone string yes label string no"},{"location":"calendar-clock/#timezone","title":"<code>timezone</code>","text":"<p>A timezone identifier such as <code>Europe/London</code>, <code>America/New_York</code>, etc. The full list of available identifiers can be found here.</p>"},{"location":"calendar-clock/#label","title":"<code>label</code>","text":"<p>Optionally, override the display value for the timezone to something more meaningful such as \"Home\", \"Work\" or anything else.</p>"},{"location":"calendar-clock/#calendar","title":"Calendar","text":"<p>Display a calendar.</p> <p>Example:</p> <pre><code>- type: calendar\n  first-day-of-week: monday\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"calendar-clock/#properties_1","title":"Properties","text":"Name Type Required Default first-day-of-week string no monday"},{"location":"calendar-clock/#first-day-of-week","title":"<code>first-day-of-week</code>","text":"<p>The day of the week that the calendar starts on. All week days are available as possible values.</p>"},{"location":"calendar-clock/#calendar-legacy","title":"Calendar (legacy)","text":"<p>Display a calendar.</p> <p>Example:</p> <pre><code>- type: calendar-legacy\n  start-sunday: false\n</code></pre> <p>Preview:</p> <p></p> <p>[!NOTE]</p> <p>This widget is deprecated and may be removed in a future version.</p>"},{"location":"calendar-clock/#properties_2","title":"Properties","text":"Name Type Required Default start-sunday boolean no false"},{"location":"calendar-clock/#start-sunday","title":"<code>start-sunday</code>","text":"<p>Whether calendar weeks start on Sunday or Monday.</p> <p>[!NOTE]</p> <p>There is currently little customizability available for the calendar. Extra features will be added in the future.</p>"},{"location":"changedetection/","title":"Changedetection.io","text":""},{"location":"changedetection/#changedetectionio","title":"ChangeDetection.io","text":"<p>Display a list watches from changedetection.io.</p> <p>Example</p> <pre><code>- type: change-detection\n  instance-url: https://changedetection.mydomain.com/\n  token: ${CHANGE_DETECTION_TOKEN}\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"changedetection/#properties","title":"Properties","text":"Name Type Required Default instance-url string no <code>https://www.changedetection.io</code> token string no limit integer no 10 collapse-after integer no 5 watches array of strings no"},{"location":"changedetection/#instance-url","title":"<code>instance-url</code>","text":"<p>The URL pointing to your instance of <code>changedetection.io</code>.</p>"},{"location":"changedetection/#token","title":"<code>token</code>","text":"<p>The API access token which can be found in <code>SETTINGS &gt; API</code>. Optionally, you can specify this using an environment variable with the syntax <code>${VARIABLE_NAME}</code>.</p>"},{"location":"changedetection/#limit","title":"<code>limit</code>","text":"<p>The maximum number of watches to show.</p>"},{"location":"changedetection/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many watches are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"changedetection/#watches","title":"<code>watches</code>","text":"<p>By default all of the configured watches will be shown. Optionally, you can specify a list of UUIDs for the specific watches you want to have listed:</p> <pre><code>  - type: change-detection\n    watches:\n      - 1abca041-6d4f-4554-aa19-809147f538d3\n      - 705ed3e4-ea86-4d25-a064-822a6425be2c\n</code></pre>"},{"location":"config-custom-api/","title":"Custom API","text":""},{"location":"config-custom-api/#custom-api","title":"Custom API","text":"<p>Display data from a JSON API using a custom template.</p> <p>[!NOTE]</p> <p>The configuration of this widget requires some basic knowledge of programming, HTML, CSS, the Go template language and Glance-specific concepts.</p> <p>Examples:</p> <p></p> View <code>glance.yml</code> <pre><code>- type: custom-api\n  title: Random Fact\n  cache: 6h\n  url: https://uselessfacts.jsph.pl/api/v2/facts/random\n  template: |\n    &lt;p class=\"size-h4 color-paragraph\"&gt;{{ .JSON.String \"text\" }}&lt;/p&gt;\n</code></pre> <p></p> <p></p> View <code>glance.yml</code> <pre><code>- type: custom-api\n  title: Immich stats\n  cache: 1d\n  url: https://${IMMICH_URL}/api/server/statistics\n  headers:\n    x-api-key: ${IMMICH_API_KEY}\n    Accept: application/json\n  template: |\n    &lt;div class=\"flex justify-between text-center\"&gt;\n      &lt;div&gt;\n          &lt;div class=\"color-highlight size-h3\"&gt;{{ .JSON.Int \"photos\" | formatNumber }}&lt;/div&gt;\n          &lt;div class=\"size-h6\"&gt;PHOTOS&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n          &lt;div class=\"color-highlight size-h3\"&gt;{{ .JSON.Int \"videos\" | formatNumber }}&lt;/div&gt;\n          &lt;div class=\"size-h6\"&gt;VIDEOS&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n          &lt;div class=\"color-highlight size-h3\"&gt;{{ div (.JSON.Int \"usage\" | toFloat) 1073741824 | toInt | formatNumber }}GB&lt;/div&gt;\n          &lt;div class=\"size-h6\"&gt;USAGE&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n</code></pre> <p></p> <p></p> View <code>glance.yml</code> <pre><code>- type: custom-api\n  title: Steam Specials\n  cache: 12h\n  url: https://store.steampowered.com/api/featuredcategories?cc=us\n  template: |\n    &lt;ul class=\"list list-gap-10 collapsible-container\" data-collapse-after=\"5\"&gt;\n    {{ range .JSON.Array \"specials.items\" }}\n      &lt;li&gt;\n        &lt;a class=\"size-h4 color-highlight block text-truncate\" href=\"https://store.steampowered.com/app/{{ .Int \"id\" }}/\"&gt;{{ .String \"name\" }}&lt;/a&gt;\n        &lt;ul class=\"list-horizontal-text\"&gt;\n          &lt;li&gt;{{ div (.Int \"final_price\" | toFloat) 100 | printf \"$%.2f\" }}&lt;/li&gt;\n          {{ $discount := .Int \"discount_percent\" }}\n          &lt;li{{ if ge $discount 40 }} class=\"color-positive\"{{ end }}&gt;{{ $discount }}% off&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/li&gt;\n    {{ end }}\n    &lt;/ul&gt;\n</code></pre>"},{"location":"config-custom-api/#properties","title":"Properties","text":"Name Type Required Default url string no headers key (string) &amp; value (string) no method string no GET body-type string no json body any no frameless boolean no false allow-insecure boolean no false skip-json-validation boolean no false template string yes options map no parameters key (string) &amp; value (string array) no subrequests map of requests no"},{"location":"config-custom-api/#url","title":"<code>url</code>","text":"<p>The URL to fetch the data from. It must be accessible from the server that Glance is running on.</p>"},{"location":"config-custom-api/#headers","title":"<code>headers</code>","text":"<p>Optionally specify the headers that will be sent with the request. Example:</p> <pre><code>headers:\n  x-api-key: your-api-key\n  Accept: application/json\n</code></pre>"},{"location":"config-custom-api/#method","title":"<code>method</code>","text":"<p>The HTTP method to use when making the request. Possible values are <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code>, <code>DELETE</code>, <code>OPTIONS</code> and <code>HEAD</code>.</p>"},{"location":"config-custom-api/#body-type","title":"<code>body-type</code>","text":"<p>The type of the body that will be sent with the request. Possible values are <code>json</code>, and <code>string</code>.</p>"},{"location":"config-custom-api/#body","title":"<code>body</code>","text":"<p>The body that will be sent with the request. It can be a string or a map. Example:</p> <pre><code>body-type: json\nbody:\n  key1: value1\n  key2: value2\n  multiple-items:\n    - item1\n    - item2\n</code></pre> <pre><code>body-type: string\nbody: |\n  key1=value1&amp;key2=value2\n</code></pre>"},{"location":"config-custom-api/#frameless","title":"<code>frameless</code>","text":"<p>When set to <code>true</code>, removes the border and padding around the widget.</p>"},{"location":"config-custom-api/#allow-insecure","title":"<code>allow-insecure</code>","text":"<p>Whether to ignore invalid/self-signed certificates.</p>"},{"location":"config-custom-api/#skip-json-validation","title":"<code>skip-json-validation</code>","text":"<p>When set to <code>true</code>, skips the JSON validation step. This is useful when the API returns JSON Lines/newline-delimited JSON, which is a format that consists of several JSON objects separated by newlines.</p>"},{"location":"config-custom-api/#template","title":"<code>template</code>","text":"<p>The template that will be used to display the data. It relies on Go's <code>html/template</code> package so it's recommended to go through its documentation to understand how to do basic things such as conditionals, loops, etc. In addition, it also uses tidwall's gjson package to parse the JSON data so it's worth going through its documentation if you want to use more advanced JSON selectors. You can view additional examples with explanations and function definitions here.</p>"},{"location":"config-custom-api/#options","title":"<code>options</code>","text":"<p>A map of options that will be passed to the template and can be used to modify the behavior of the widget.</p> View examples   Instead of defining options within the template and having to modify the template itself like such:  <pre><code>- type: custom-api\n  template: |\n    {{ /* User configurable options */ }}\n    {{ $collapseAfter := 5 }}\n    {{ $showThumbnails := true }}\n    {{ $showFlairs := false }}\n\n     &lt;ul class=\"list list-gap-10 collapsible-container\" data-collapse-after=\"{{ $collapseAfter }}\"&gt;\n      {{ if $showThumbnails }}\n        &lt;li&gt;\n          &lt;img src=\"{{ .JSON.String \"thumbnail\" }}\" alt=\"thumbnail\" /&gt;\n        &lt;/li&gt;\n      {{ end }}\n      {{ if $showFlairs }}\n        &lt;li&gt;\n          &lt;span class=\"flair\"&gt;{{ .JSON.String \"flair\" }}&lt;/span&gt;\n        &lt;/li&gt;\n      {{ end }}\n     &lt;/ul&gt;\n</code></pre>  You can use the `options` property to retrieve and define default values for these variables:  <pre><code>- type: custom-api\n  template: |\n    &lt;ul class=\"list list-gap-10 collapsible-container\" data-collapse-after=\"{{ .Options.IntOr \"collapse-after\" 5 }}\"&gt;\n      {{ if (.Options.BoolOr \"show-thumbnails\" true) }}\n        &lt;li&gt;\n          &lt;img src=\"{{ .JSON.String \"thumbnail\" }}\" alt=\"thumbnail\" /&gt;\n        &lt;/li&gt;\n      {{ end }}\n      {{ if (.Options.BoolOr \"show-flairs\" false) }}\n        &lt;li&gt;\n          &lt;span class=\"flair\"&gt;{{ .JSON.String \"flair\" }}&lt;/span&gt;\n        &lt;/li&gt;\n      {{ end }}\n    &lt;/ul&gt;\n</code></pre>  This way, you can optionally specify the `collapse-after`, `show-thumbnails` and `show-flairs` properties in the widget configuration:  <pre><code>- type: custom-api\n  options:\n    collapse-after: 5\n    show-thumbnails: true\n    show-flairs: false\n</code></pre>  Which means you can reuse the same template for multiple widgets with different options:  <pre><code># Note that `custom-widgets` isn't a special property, it's just used to define the reusable \"anchor\", see https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/\ncustom-widgets:\n  - &amp;example-widget\n    type: custom-api\n    template: |\n      {{ .Options.StringOr \"custom-option\" \"not defined\" }}\n\npages:\n  - name: Home\n    columns:\n      - size: full\n        widgets:\n          - &lt;&lt;: *example-widget\n            options:\n              custom-option: \"Value 1\"\n\n          - &lt;&lt;: *example-widget\n            options:\n              custom-option: \"Value 2\"\n</code></pre>  Currently, the available methods on the `.Options` object are: `StringOr`, `IntOr`, `BoolOr` and `FloatOr`."},{"location":"config-custom-api/#parameters","title":"<code>parameters</code>","text":"<p>A list of keys and values that will be sent to the custom-api as query paramters.</p>"},{"location":"config-custom-api/#subrequests","title":"<code>subrequests</code>","text":"<p>A map of additional requests that will be executed concurrently and then made available in the template via the <code>.Subrequest</code> property. Example:</p> <pre><code>- type: custom-api\n  cache: 2h\n  subrequests:\n    another-one:\n      url: https://uselessfacts.jsph.pl/api/v2/facts/random\n  title: Random Fact\n  url: https://uselessfacts.jsph.pl/api/v2/facts/random\n  template: |\n    &lt;p class=\"size-h4 color-paragraph\"&gt;{{ .JSON.String \"text\" }}&lt;/p&gt;\n    &lt;p class=\"size-h4 color-paragraph margin-top-15\"&gt;{{ (.Subrequest \"another-one\").JSON.String \"text\" }}&lt;/p&gt;\n</code></pre> <p>The subrequests support all the same properties as the main request, except for <code>subrequests</code> itself, so you can use <code>headers</code>, <code>parameters</code>, etc.</p> <p><code>(.Subrequest \"key\")</code> can be a little cumbersome to write, so you can define a variable to make it easier:</p> <pre><code>  template: |\n    {{ $anotherOne := .Subrequest \"another-one\" }}\n    &lt;p&gt;{{ $anotherOne.JSON.String \"text\" }}&lt;/p&gt;\n</code></pre> <p>You can also access the <code>.Response</code> property of a subrequest as you would with the main request:</p> <pre><code>  template: |\n    {{ $anotherOne := .Subrequest \"another-one\" }}\n    &lt;p&gt;{{ $anotherOne.Response.StatusCode }}&lt;/p&gt;\n</code></pre> <p>[!NOTE]</p> <p>Setting this property will override any query parameters that are already in the URL.</p> <pre><code>parameters:\n  param1: value1\n  param2:\n    - item1\n    - item2\n</code></pre>"},{"location":"configuration/","title":"Configuring Glance","text":""},{"location":"configuration/#preconfigured-page","title":"Preconfigured page","text":"<p>If you don't want to spend time reading through all the available configuration options and just want something to get you going quickly you can use this <code>glance.yml</code> file and make changes to it as you see fit. It will give you a page that looks like the following:</p> <p></p> <p>Configure the widgets, add more of them, add extra pages, etc. Make it your own!</p>"},{"location":"configuration/#the-config-file","title":"The config file","text":""},{"location":"configuration/#auto-reload","title":"Auto reload","text":"<p>Automatic config reload is supported, meaning that you can make changes to the config file and have them take effect on save without having to restart the container/service. Making changes to environment variables does not trigger a reload and requires manual restart. Deleting a config file will stop that file from being watched, even if it is recreated.</p> <p>[!NOTE]</p> <p>If you attempt to start Glance with an invalid config it will exit with an error outright. If you successfully started Glance with a valid config and then made changes to it which result in an error, you'll see that error in the console and Glance will continue to run with the old configuration. You can then continue to make changes and when there are no errors the new configuration will be loaded.</p> <p>[!CAUTION]</p> <p>Reloading the configuration file clears your cached data, meaning that you have to request the data anew each time you do this. This can lead to rate limiting for some APIs if you do it too frequently. Having a cache that persists between reloads will be added in the future.</p>"},{"location":"configuration/#environment-variables","title":"Environment variables","text":"<p>Inserting environment variables is supported anywhere in the config. This is done via the <code>${ENV_VAR}</code> syntax. Attempting to use an environment variable that doesn't exist will result in an error and Glance will either not start or load your new config on save. Example:</p> <pre><code>server:\n  host: ${HOST}\n  port: ${PORT}\n</code></pre> <p>Can also be in the middle of a string:</p> <pre><code>- type: rss\n  title: ${RSS_TITLE}\n  feeds:\n    - url: http://domain.com/rss/${RSS_CATEGORY}.xml\n</code></pre> <p>Works with any type of value, not just strings:</p> <pre><code>- type: rss\n  limit: ${RSS_LIMIT}\n</code></pre> <p>If you need to use the syntax <code>${NAME}</code> in your config without it being interpreted as an environment variable, you can escape it by prefixing with a backslash <code>\\</code>:</p> <pre><code>something: \\${NOT_AN_ENV_VAR}\n</code></pre>"},{"location":"configuration/#other-ways-of-providing-tokenspasswordssecrets","title":"Other ways of providing tokens/passwords/secrets","text":"<p>You can use Docker secrets with the following syntax:</p> <pre><code># This will be replaced with the contents of the file /run/secrets/github_token\n# so long as the secret `github_token` is provided to the container\ntoken: ${secret:github_token}\n</code></pre> <p>Alternatively, you can load the contents of a file who's path is provided by an environment variable:</p> <p><code>docker-compose.yml</code> <pre><code>services:\n  glance:\n    image: glanceapp/glance\n    environment:\n      - TOKEN_FILE=/home/user/token\n    volumes:\n      - /home/user/token:/home/user/token\n</code></pre></p> <p><code>glance.yml</code> <pre><code>token: ${readFileFromEnv:TOKEN_FILE}\n</code></pre></p> <p>[!NOTE]</p> <p>The contents of the file will be stripped of any leading/trailing whitespace before being used.</p>"},{"location":"configuration/#including-other-config-files","title":"Including other config files","text":"<p>Including config files from within your main config file is supported. This is done via the <code>$include</code> directive along with a relative or absolute path to the file you want to include. If the path is relative, it will be relative to the main config file. Additionally, environment variables can be used within included files, and changes to the included files will trigger an automatic reload. Example:</p> <pre><code>pages:\n  - $include: home.yml\n  - $include: videos.yml\n  - $include: homelab.yml\n</code></pre> <p>The file you are including should not have any additional indentation, its values should be at the top level and the appropriate amount of indentation will be added automatically depending on where the file is included. Example:</p> <p><code>glance.yml</code></p> <pre><code>pages:\n  - name: Home\n    columns:\n      - size: full\n        widgets:\n          $include: rss.yml\n  - name: News\n    columns:\n      - size: full\n        widgets:\n          - type: group\n            widgets:\n              $include: rss.yml\n              - type: reddit\n                subreddit: news\n</code></pre> <p><code>rss.yml</code></p> <pre><code>- type: rss\n  title: News\n  feeds:\n    - url: ${RSS_URL}\n</code></pre> <p>The <code>$include</code> directive can be used anywhere in the config file, not just in the <code>pages</code> property, however it must be on its own line and have the appropriate indentation.</p> <p>If you encounter YAML parsing errors when using the <code>$include</code> directive, the reported line numbers will likely be incorrect. This is because the inclusion of files is done before the YAML is parsed, as YAML itself does not support file inclusion. To help with debugging in cases like this, you can use the <code>config:print</code> command and pipe it into <code>less -N</code> to see the full config file with includes resolved and line numbers added:</p> <pre><code>glance --config /path/to/glance.yml config:print | less -N\n</code></pre> <p>This is a bit more convoluted when running Glance inside a Docker container:</p> <pre><code>docker run --rm -v ./glance.yml:/app/config/glance.yml glanceapp/glance config:print | less -N\n</code></pre> <p>This assumes that the config you want to print is in your current working directory and is named <code>glance.yml</code>.</p>"},{"location":"configuration/#icons","title":"Icons","text":"<p>For widgets which provide you with the ability to specify icons such as the monitor, bookmarks, docker containers, etc, you can use the <code>icon</code> property to specify a URL to an image or use icon names from multiple libraries via prefixes:</p> <pre><code>icon: si:immich # si for Simple icons https://simpleicons.org/\nicon: sh:immich # sh for selfh.st icons https://selfh.st/icons/\nicon: di:immich # di for Dashboard icons https://github.com/homarr-labs/dashboard-icons\nicon: mdi:camera # mdi for Material Design icons https://pictogrammers.com/library/mdi/\n</code></pre> <p>[!NOTE]</p> <p>The icons are loaded externally and are hosted on <code>cdn.jsdelivr.net</code>, if you do not wish to depend on a 3rd party you are free to download the icons individually and host them locally.</p> <p>Icons from the Simple icons library as well as Material Design icons will automatically invert their color to match your light or dark theme, however you may want to enable this manually for other icons. To do this, you can use the <code>auto-invert</code> prefix:</p> <pre><code>icon: auto-invert https://example.com/path/to/icon.png # with a URL\nicon: auto-invert sh:glance-dark # with a selfh.st icon\n</code></pre> <p>This expects the icon to be black and will automatically invert it to white when using a dark theme.</p>"},{"location":"configuration/#config-schema","title":"Config schema","text":"<p>For property descriptions, validation and autocompletion of the config within your IDE, @not-first has kindly created a schema. Massive thanks to them for this, go check it out and give them a star!</p>"},{"location":"configuration/#authentication","title":"Authentication","text":"<p>To make sure that only you and the people you want to share your dashboard with have access to it, you can set up authentication via username and password. This is done through a top level <code>auth</code> property. Example:</p> <pre><code>auth:\n  secret-key: # this must be set to a random value generated using the secret:make CLI command\n  users:\n    admin:\n      password: 123456\n    svilen:\n      password: 123456\n</code></pre> <p>To generate a secret key, run the following command:</p> <pre><code>./glance secret:make\n</code></pre> <p>Or with Docker:</p> <pre><code>docker run --rm glanceapp/glance secret:make\n</code></pre>"},{"location":"configuration/#using-hashed-passwords","title":"Using hashed passwords","text":"<p>If you do not want to store plain passwords in your config file or in environment variables, you can hash your password and provide its hash instead:</p> <pre><code>./glance password:hash mysecretpassword\n</code></pre> <p>Or with Docker:</p> <pre><code>docker run --rm glanceapp/glance password:hash mysecretpassword\n</code></pre> <p>Then, in your config file use the <code>password-hash</code> property instead of <code>password</code>:</p> <pre><code>auth:\n  secret-key: # this must be set to a random value generated using the secret:make CLI command\n  users:\n    admin:\n      password-hash: $2a$10$o6SXqiccI3DDP2dN4ADumuOeIHET6Q4bUMYZD6rT2Aqt6XQ3DyO.6\n</code></pre>"},{"location":"configuration/#preventing-brute-force-attacks","title":"Preventing brute-force attacks","text":"<p>Glance will automatically block IP addresses of users who fail to authenticate 5 times in a row in the span of 5 minutes. In order for this feature to work correctly, Glance must know the real IP address of requests. If you're using a reverse proxy such as nginx, Traefik, NPM, etc, you must set the <code>proxied</code> property in the <code>server</code> configuration to <code>true</code>:</p> <pre><code>server:\n  proxied: true\n</code></pre> <p>When set to <code>true</code>, Glance will use the <code>X-Forwarded-For</code> header to determine the original IP address of the request, so make sure that your reverse proxy is correctly configured to send that header.</p>"},{"location":"custom-api/","title":"Custom API","text":"<p>Jump to function definitions</p>"},{"location":"custom-api/#examples","title":"Examples","text":"<p>The best way to get an idea of how the templates work would be with a bunch examples. Here are the most common use cases:</p> <p>JSON response:</p> <pre><code>{\n  \"title\": \"My Title\",\n  \"content\": \"My Content\",\n}\n</code></pre> <p>To access the two fields in the JSON response, you would use the following:</p> <pre><code>&lt;div&gt;{{ .JSON.String \"title\" }}&lt;/div&gt;\n&lt;div&gt;{{ .JSON.String \"content\" }}&lt;/div&gt;\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;My Title&lt;/div&gt;\n&lt;div&gt;My Content&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>{\n  \"author\": \"John Doe\",\n  \"posts\": [\n    {\n      \"title\": \"My Title\",\n      \"content\": \"My Content\"\n    },\n    {\n      \"title\": \"My Title 2\",\n      \"content\": \"My Content 2\"\n    }\n  ]\n}\n</code></pre> <p>To loop through the array of posts, you would use the following:</p> <pre><code>{{ range .JSON.Array \"posts\" }}\n  &lt;div&gt;{{ .String \"title\" }}&lt;/div&gt;\n  &lt;div&gt;{{ .String \"content\" }}&lt;/div&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;My Title&lt;/div&gt;\n&lt;div&gt;My Content&lt;/div&gt;\n&lt;div&gt;My Title 2&lt;/div&gt;\n&lt;div&gt;My Content 2&lt;/div&gt;\n</code></pre> <p>Notice the missing <code>.JSON</code> when accessing the title and content, this is because the range function sets the context to the current array element.</p> <p>If you want to access the top-level context within the range, you can use the following:</p> <pre><code>{{ range .JSON.Array \"posts\" }}\n  &lt;div&gt;{{ .String \"title\" }}&lt;/div&gt;\n  &lt;div&gt;{{ .String \"content\" }}&lt;/div&gt;\n  &lt;div&gt;{{ $.JSON.String \"author\" }}&lt;/div&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;My Title&lt;/div&gt;\n&lt;div&gt;My Content&lt;/div&gt;\n&lt;div&gt;John Doe&lt;/div&gt;\n&lt;div&gt;My Title 2&lt;/div&gt;\n&lt;div&gt;My Content 2&lt;/div&gt;\n&lt;div&gt;John Doe&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>[\n    \"Apple\",\n    \"Banana\",\n    \"Cherry\",\n    \"Watermelon\"\n]\n</code></pre> <p>Somewhat awkwardly, when the current context is a basic type that isn't an object, the way you specify its type is to use an empty string as the key. So, to loop through the array of strings, you would use the following:</p> <pre><code>{{ range .JSON.Array \"\" }}\n  &lt;div&gt;{{ .String \"\" }}&lt;/div&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;Apple&lt;/div&gt;\n&lt;div&gt;Banana&lt;/div&gt;\n&lt;div&gt;Cherry&lt;/div&gt;\n&lt;div&gt;Watermelon&lt;/div&gt;\n</code></pre> <p>To access an item at a specific index, you could use the following:</p> <pre><code>&lt;div&gt;{{ .JSON.String \"0\" }}&lt;/div&gt;\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;Apple&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>{\n    \"user\": {\n        \"address\": {\n            \"city\": \"New York\",\n            \"state\": \"NY\"\n        }\n    }\n}\n</code></pre> <p>To easily access deeply nested objects, you can use the following dot notation:</p> <pre><code>&lt;div&gt;{{ .JSON.String \"user.address.city\" }}&lt;/div&gt;\n&lt;div&gt;{{ .JSON.String \"user.address.state\" }}&lt;/div&gt;\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;New York&lt;/div&gt;\n&lt;div&gt;NY&lt;/div&gt;\n</code></pre> <p>Using indexes anywhere in the path is also supported:</p> <pre><code>{\n    \"users\": [\n        {\n            \"name\": \"John Doe\"\n        },\n        {\n            \"name\": \"Jane Doe\"\n        }\n    ]\n}\n</code></pre> <pre><code>&lt;div&gt;{{ .JSON.String \"users.0.name\" }}&lt;/div&gt;\n&lt;div&gt;{{ .JSON.String \"users.1.name\" }}&lt;/div&gt;\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;John Doe&lt;/div&gt;\n&lt;div&gt;Jane Doe&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"age\": 30\n    }\n}\n</code></pre> <p>To check if a field exists, you can use the following:</p> <pre><code>{{ if .JSON.Exists \"user.age\" }}\n  &lt;div&gt;{{ .JSON.Int \"user.age\" }}&lt;/div&gt;\n{{ else }}\n  &lt;div&gt;Age not provided&lt;/div&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;30&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>{\n    \"price\": 100,\n    \"discount\": 10\n}\n</code></pre> <p>Calculations can be performed on either ints or floats. If both numbers are ints, an int will be returned, otherwise a float will be returned. If you try to divide by zero, 0 will be returned. If you provide non-numeric values, <code>NaN</code> will be returned.</p> <pre><code>&lt;div&gt;{{ sub (.JSON.Int \"price\") (.JSON.Int \"discount\") }}&lt;/div&gt;\n</code></pre> <p>Output:</p> <pre><code>&lt;div&gt;90&lt;/div&gt;\n</code></pre> <p>Other operations include <code>add</code>, <code>mul</code>, <code>div</code> and <code>mod</code>.</p> <p>JSON response:</p> <pre><code>{\n  \"posts\": [\n    {\n      \"title\": \"Exploring the Depths of Quantum Computing\",\n      \"date\": \"2023-10-27T10:00:00Z\"\n    },\n    {\n      \"title\": \"A Beginner's Guide to Sustainable Living\",\n      \"date\": \"2023-11-15T14:30:00+01:00\"\n    },\n    {\n      \"title\": \"The Art of Baking Sourdough Bread\",\n      \"date\": \"2023-12-03T08:45:22-08:00\"\n    }\n  ]\n}\n</code></pre> <p>To parse the date and display the relative time (e.g. 2h, 1d, etc), you would use the following:</p> <pre><code>{{ range .JSON.Array \"posts\" }}\n  &lt;div&gt;{{ .String \"title\" }}&lt;/div&gt;\n  &lt;div {{ .String \"date\" | parseTime \"rfc3339\" | toRelativeTime }}&gt;&lt;/div&gt;\n{{ end }}\n</code></pre> <p>The <code>parseTime</code> function takes two arguments: the layout of the date string and the date string itself. The layout can be one of the following: \"RFC3339\", \"RFC3339Nano\", \"DateTime\", \"DateOnly\", \"TimeOnly\" or a custom layout in Go's date format.</p> <p>Output:</p> <pre><code>&lt;div&gt;Exploring the Depths of Quantum Computing&lt;/div&gt;\n&lt;div data-dynamic-relative-time=\"1698400800\"&gt;&lt;/div&gt;\n\n&lt;div&gt;A Beginner's Guide to Sustainable Living&lt;/div&gt;\n&lt;div data-dynamic-relative-time=\"1700055000\"&gt;&lt;/div&gt;\n\n&lt;div&gt;The Art of Baking Sourdough Bread&lt;/div&gt;\n&lt;div data-dynamic-relative-time=\"1701621922\"&gt;&lt;/div&gt;\n</code></pre> <p>You don't have to worry about the internal implementation, this will then be dynamically populated by Glance on the client side to show the correct relative time.</p> <p>The important thing to notice here is that the return value of <code>toRelativeTime</code> must be used as an attribute in an HTML tag, be it a <code>div</code>, <code>li</code>, <code>span</code>, etc.</p> <p>In some instances, you may want to know the status code of the response. This can be done using the following:</p> <pre><code>{{ if eq .Response.StatusCode 200 }}\n  &lt;p&gt;Success!&lt;/p&gt;\n{{ else }}\n  &lt;p&gt;Failed to fetch data&lt;/p&gt;\n{{ end }}\n</code></pre> <p>You can also access the response headers:</p> <pre><code>&lt;div&gt;{{ .Response.Header.Get \"Content-Type\" }}&lt;/div&gt;\n</code></pre> <p>JSON response:</p> <pre><code>{\"name\": \"Steve\", \"age\": 30}\n{\"name\": \"Alex\", \"age\": 25}\n{\"name\": \"John\", \"age\": 35}\n</code></pre> <p>The above format is \"ndjson\" or \"JSON Lines\", where each line is a separate JSON object. To parse this format, you must first disable the JSON validation check in your config, since by default the response is expected to be a single valid JSON object:</p> <pre><code>- type: custom-api\n  skip-json-validation: true\n</code></pre> <p>Then, to iterate over each object you can use <code>.JSONLines</code>:</p> <pre><code>{{ range .JSONLines }}\n  &lt;p&gt;{{ .String \"name\" }} is {{ .Int \"age\" }} years old&lt;/p&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;p&gt;Steve is 30 years old&lt;/p&gt;\n&lt;p&gt;Alex is 25 years old&lt;/p&gt;\n&lt;p&gt;John is 35 years old&lt;/p&gt;\n</code></pre> <p>For other ways of selecting data from a JSON Lines response, have a look at the docs for tidwall/gjson. For example, to  get an array of all names, you can use the following:</p> <pre><code>{{ range .JSON.Array \"..#.name\" }}\n  &lt;p&gt;{{ .String \"\" }}&lt;/p&gt;\n{{ end }}\n</code></pre> <p>Output:</p> <pre><code>&lt;p&gt;Steve&lt;/p&gt;\n&lt;p&gt;Alex&lt;/p&gt;\n&lt;p&gt;John&lt;/p&gt;\n</code></pre> <p>In some instances, you may need to make two consecutive API calls, where you use the result of the first call in the second call. To achieve this, you can make additional HTTP requests from within the template itself using the following syntax:</p> <pre><code>- type: custom-api\n  url: https://api.example.com/get-id-of-something\n  template: |\n    {{ $theID := .JSON.String \"id\" }}\n\n    {{\n      $something := newRequest (concat \"https://api.example.com/something/\" $theID)\n        | withParameter \"key\" \"value\"\n        | withHeader \"Authorization\" \"Bearer token\"\n        | getResponse\n    }}\n\n    {{ $something.JSON.String \"title\" }}\n</code></pre> <p>Here, <code>$theID</code> gets retrieved from the result of the first API call and used in the second API call. The <code>newRequest</code> function creates a new request, and the <code>getResponse</code> function executes it. You can also use <code>withParameter</code> and <code>withHeader</code> to optionally add parameters and headers to the request.</p> <p>If you need to make a request to a URL that requires dynamic parameters, you can omit the <code>url</code> property in the YAML and run the request entirely from within the template itself:</p> <pre><code>- type: custom-api\n  title: Events from the last 24h\n  template: |\n    {{\n      $events := newRequest \"https://api.example.com/events\"\n        | withParameter \"after\" (offsetNow \"-24h\" | formatTime \"rfc3339\")\n        | getResponse\n    }}\n\n    {{ if eq $events.Response.StatusCode 200 }}\n      {{ range $events.JSON.Array \"events\" }}\n        &lt;div&gt;{{ .String \"title\" }}&lt;/div&gt;\n        &lt;div {{ .String \"date\" | parseTime \"rfc3339\" | toRelativeTime }}&gt;&lt;/div&gt;\n      {{ end }}\n    {{ else }}\n      &lt;p&gt;Failed to fetch data: {{ $events.Response.Status }}&lt;/p&gt;\n    {{ end }}\n</code></pre> <p>Note that you need to manually check for the correct status code.</p>"},{"location":"custom-api/#functions","title":"Functions","text":"<p>The following functions are available on the <code>JSON</code> object:</p> <ul> <li><code>String(key string) string</code>: Returns the value of the key as a string.</li> <li><code>Int(key string) int</code>: Returns the value of the key as an integer.</li> <li><code>Float(key string) float</code>: Returns the value of the key as a float.</li> <li><code>Bool(key string) bool</code>: Returns the value of the key as a boolean.</li> <li><code>Array(key string) []JSON</code>: Returns the value of the key as an array of <code>JSON</code> objects.</li> <li><code>Exists(key string) bool</code>: Returns true if the key exists in the JSON object.</li> </ul> <p>The following functions are available on the <code>Options</code> object:</p> <ul> <li><code>StringOr(key string, default string) string</code>: Returns the value of the key as a string, or the default value if the key does not exist.</li> <li><code>IntOr(key string, default int) int</code>: Returns the value of the key as an integer, or the default value if the key does not exist.</li> <li><code>FloatOr(key string, default float) float</code>: Returns the value of the key as a float, or the default value if the key does not exist.</li> <li><code>BoolOr(key string, default bool) bool</code>: Returns the value of the key as a boolean, or the default value if the key does not exist.</li> <li><code>JSON(key string) JSON</code>: Returns the value of the key as a stringified <code>JSON</code> object, or throws an error if the key does not exist.</li> </ul> <p>The following helper functions provided by Glance are available:</p> <ul> <li><code>toFloat(i int) float</code>: Converts an integer to a float.</li> <li><code>toInt(f float) int</code>: Converts a float to an integer.</li> <li><code>toRelativeTime(t time.Time) template.HTMLAttr</code>: Converts Time to a relative time such as 2h, 1d, etc which dynamically updates. NOTE: the value of this function should be used as an attribute in an HTML tag, e.g. <code>&lt;span {{ toRelativeTime .Time }}&gt;&lt;/span&gt;</code>.</li> <li><code>now() time.Time</code>: Returns the current time.</li> <li><code>offsetNow(offset string) time.Time</code>: Returns the current time with an offset. The offset can be positive or negative and must be in the format \"3h\" \"-1h\" or \"2h30m10s\".</li> <li><code>duration(str string) time.Duration</code>: Parses a string such as <code>1h</code>, <code>24h</code>, <code>5h30m</code>, etc into a <code>time.Duration</code>.</li> <li><code>parseTime(layout string, s string) time.Time</code>: Parses a string into time.Time. The layout must be provided in Go's date format. You can alternatively use these values instead of the literal format: \"unix\", \"RFC3339\", \"RFC3339Nano\", \"DateTime\", \"DateOnly\".</li> <li><code>formatTime(layout string, s string) time.Time</code>: Formats a <code>time.Time</code> into a string. The layout uses the same format as <code>parseTime</code>.</li> <li><code>parseLocalTime(layout string, s string) time.Time</code>: Same as the above, except in the absence of a timezone, it will use the local timezone instead of UTC.</li> <li><code>parseRelativeTime(layout string, s string) time.Time</code>: A shorthand for <code>{{ .String \"date\" | parseTime \"rfc3339\" | toRelativeTime }}</code>.</li> <li><code>add(a, b float) float</code>: Adds two numbers.</li> <li><code>sub(a, b float) float</code>: Subtracts two numbers.</li> <li><code>mul(a, b float) float</code>: Multiplies two numbers.</li> <li><code>div(a, b float) float</code>: Divides two numbers.</li> <li><code>mod(a, b int) int</code>: Remainder after dividing a by b (a % b).</li> <li><code>formatApproxNumber(n int) string</code>: Formats a number to be more human-readable, e.g. 1000 -&gt; 1k.</li> <li><code>formatNumber(n float|int) string</code>: Formats a number with commas, e.g. 1000 -&gt; 1,000.</li> <li><code>trimPrefix(prefix string, str string) string</code>: Trims the prefix from a string.</li> <li><code>trimSuffix(suffix string, str string) string</code>: Trims the suffix from a string.</li> <li><code>trimSpace(str string) string</code>: Trims whitespace from a string on both ends.</li> <li><code>replaceAll(old string, new string, str string) string</code>: Replaces all occurrences of a string in a string.</li> <li><code>replaceMatches(pattern string, replacement string, str string) string</code>: Replaces all occurrences of a regular expression in a string.</li> <li><code>findMatch(pattern string, str string) string</code>: Finds the first match of a regular expression in a string.</li> <li><code>findSubmatch(pattern string, str string) string</code>: Finds the first submatch of a regular expression in a string.</li> <li><code>sortByString(key string, order string, arr []JSON): []JSON</code>: Sorts an array of JSON objects by a string key in either ascending or descending order.</li> <li><code>sortByInt(key string, order string, arr []JSON): []JSON</code>: Sorts an array of JSON objects by an integer key in either ascending or descending order.</li> <li><code>sortByFloat(key string, order string, arr []JSON): []JSON</code>: Sorts an array of JSON objects by a float key in either ascending or descending order.</li> <li><code>sortByTime(key string, layout string, order string, arr []JSON): []JSON</code>: Sorts an array of JSON objects by a time key in either ascending or descending order. The format must be provided in Go's date format.</li> <li><code>concat(strings ...string) string</code>: Concatenates multiple strings together.</li> <li><code>unique(key string, arr []JSON) []JSON</code>: Returns a unique array of JSON objects based on the given key.</li> <li><code>percentChange(current float, previous float) float</code>: Calculates the percentage change between two numbers.</li> <li><code>startOfDay(t time.Time) time.Time</code>: Returns the start of the day for a given time.</li> <li><code>endOfDay(t time.Time) time.Time</code>: Returns the end of the day for a given time.</li> </ul> <p>The following helper functions provided by Go's <code>text/template</code> are available:</p> <ul> <li><code>eq(a, b any) bool</code>: Compares two values for equality.</li> <li><code>ne(a, b any) bool</code>: Compares two values for inequality.</li> <li><code>lt(a, b any) bool</code>: Compares two values for less than.</li> <li><code>le(a, b any) bool</code>: Compares two values for less than or equal to.</li> <li><code>gt(a, b any) bool</code>: Compares two values for greater than.</li> <li><code>ge(a, b any) bool</code>: Compares two values for greater than or equal to.</li> <li><code>and(args ...bool) bool</code>: Returns true if all arguments are true; accepts two or more boolean values.</li> <li><code>or(args ...bool) bool</code>: Returns true if any argument is true; accepts two or more boolean values.</li> <li><code>not(a bool) bool</code>: Returns the opposite of the value.</li> <li><code>index(a any, b int) any</code>: Returns the value at the specified index of an array.</li> <li><code>len(a any) int</code>: Returns the length of an array.</li> <li><code>printf(format string, a ...any) string</code>: Returns a formatted string.</li> </ul>"},{"location":"dns-stats/","title":"DNS Stats","text":""},{"location":"dns-stats/#dns-stats","title":"DNS Stats","text":"<p>Display statistics from a self-hosted ad-blocking DNS resolver such as AdGuard Home, Pi-hole, or Technitium.</p> <p>Example:</p> <pre><code>- type: dns-stats\n  service: adguard\n  url: https://adguard.domain.com/\n  username: admin\n  password: ${ADGUARD_PASSWORD}\n</code></pre> <p>Preview:</p> <p></p> <p>[!NOTE]</p> <p>When using AdGuard Home the 3rd statistic on top will be the average latency and when using Pi-hole or Technitium it will be the total number of blocked domains from all adlists.</p>"},{"location":"dns-stats/#properties","title":"Properties","text":"Name Type Required Default service string no pihole allow-insecure bool no false url string yes username string when service is <code>adguard</code> password string when service is <code>adguard</code> or <code>pihole-v6</code> token string when service is <code>pihole</code> hide-graph bool no false hide-top-domains bool no false hour-format string no 12h"},{"location":"dns-stats/#service","title":"<code>service</code>","text":"<p>Either <code>adguard</code>, <code>technitium</code>, or <code>pihole</code> (major version 5 and below) or <code>pihole-v6</code> (major version 6 and above).</p>"},{"location":"dns-stats/#allow-insecure","title":"<code>allow-insecure</code>","text":"<p>Whether to allow invalid/self-signed certificates when making the request to the service.</p>"},{"location":"dns-stats/#url","title":"<code>url</code>","text":"<p>The base URL of the service.</p>"},{"location":"dns-stats/#username","title":"<code>username</code>","text":"<p>Only required when using AdGuard Home. The username used to log into the admin dashboard.</p>"},{"location":"dns-stats/#password","title":"<code>password</code>","text":"<p>Required when using AdGuard Home, where the password is the one used to log into the admin dashboard.</p> <p>Also required when using Pi-hole major version 6 and above, where the password is the one used to log into the admin dashboard or the application password, which can be found in <code>Settings -&gt; Web Interface / API -&gt; Configure app password</code>.</p>"},{"location":"dns-stats/#token","title":"<code>token</code>","text":"<p>Required when using Pi-hole major version 5 or earlier. The API token which can be found in <code>Settings -&gt; API -&gt; Show API token</code>.</p> <p>Also required when using Technitium, an API token can be generated at <code>Administration -&gt; Sessions -&gt; Create Token</code>.</p>"},{"location":"dns-stats/#hide-graph","title":"<code>hide-graph</code>","text":"<p>Whether to hide the graph showing the number of queries over time.</p>"},{"location":"dns-stats/#hide-top-domains","title":"<code>hide-top-domains</code>","text":"<p>Whether to hide the list of top blocked domains.</p>"},{"location":"dns-stats/#hour-format","title":"<code>hour-format</code>","text":"<p>Whether to display the relative time in the graph in <code>12h</code> or <code>24h</code> format.</p>"},{"location":"docker-containers/","title":"Docker Containers","text":""},{"location":"docker-containers/#docker-containers","title":"Docker Containers","text":"<p>Display the status of your Docker containers along with an icon and an optional short description.</p> <p></p> <pre><code>- type: docker-containers\n  hide-by-default: false\n</code></pre> <p>[!NOTE]</p> <p>The widget requires access to <code>docker.sock</code>. If you're running Glance inside a container, this can be done by mounting the socket as a volume:</p> <pre><code>services:\n  glance:\n    image: glanceapp/glance\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n</code></pre> <p>Configuration of the containers is done via labels applied to each container:</p> <pre><code>  jellyfin:\n    image: jellyfin/jellyfin:latest\n    labels:\n      glance.name: Jellyfin\n      glance.icon: si:jellyfin\n      glance.url: https://jellyfin.domain.com\n      glance.description: Movies &amp; shows\n</code></pre> <p>Alternatively, you can also define the values within your <code>glance.yml</code> via the <code>containers</code> property, where the key is the container name and each value is the same as the labels but without the \"glance.\" prefix:</p> <pre><code>- type: docker-containers\n  containers:\n    container_name_1:\n      name: Container Name\n      description: Description of the container\n      url: https://container.domain.com\n      icon: si:container-icon\n      hide: false\n</code></pre> <p>For services with multiple containers you can specify a <code>glance.id</code> on the \"main\" container and <code>glance.parent</code> on each \"child\" container:</p> View <code>docker-compose.yml</code> <pre><code>services:\n  immich-server:\n    image: ghcr.io/immich-app/immich-server\n    labels:\n      glance.name: Immich\n      glance.icon: si:immich\n      glance.url: https://immich.domain.com\n      glance.description: Image &amp; video management\n      glance.id: immich\n\n  redis:\n    image: docker.io/redis:6.2-alpine\n    labels:\n      glance.parent: immich\n      glance.name: Redis\n\n  database:\n    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0\n    labels:\n      glance.parent: immich\n      glance.name: DB\n\n  proxy:\n    image: nginx:stable\n    labels:\n      glance.parent: immich\n      glance.name: Proxy\n</code></pre> <p></p> <p>This will place all child containers under the <code>Immich</code> container when hovering over its icon:</p> <p></p> <p>If any of the child containers are down, their status will propagate up to the parent container:</p> <p></p>"},{"location":"docker-containers/#properties","title":"Properties","text":"Name Type Required Default hide-by-default boolean no false format-container-names boolean no false sock-path string no /var/run/docker.sock category string no running-only boolean no false"},{"location":"docker-containers/#hide-by-default","title":"<code>hide-by-default</code>","text":"<p>Whether to hide the containers by default. If set to <code>true</code> you'll have to manually add a <code>glance.hide: false</code> label to each container you want to display. By default all containers will be shown and if you want to hide a specific container you can add a <code>glance.hide: true</code> label.</p>"},{"location":"docker-containers/#format-container-names","title":"<code>format-container-names</code>","text":"<p>When set to <code>true</code>, automatically converts container names such as <code>container_name_1</code> into <code>Container Name 1</code>.</p>"},{"location":"docker-containers/#sock-path","title":"<code>sock-path</code>","text":"<p>The path to the Docker socket. This can also be a remote socket or proxied socket using something like docker-socket-proxy.</p>"},{"location":"docker-containers/#category","title":"<code>category</code>","text":"<p>Filter to only the containers which have this category specified via the <code>glance.category</code> label. Useful if you want to have multiple containers widgets, each showing a different set of containers.</p> View example <pre><code>services:\n  jellyfin:\n    image: jellyfin/jellyfin:latest\n    labels:\n      glance.name: Jellyfin\n      glance.icon: si:jellyfin\n      glance.url: https://jellyfin.domain.com\n      glance.category: media\n\n  gitea:\n    image: gitea/gitea:latest\n    labels:\n      glance.name: Gitea\n      glance.icon: si:gitea\n      glance.url: https://gitea.domain.com\n      glance.category: dev-tools\n\n  vaultwarden:\n    image: vaultwarden/server:latest\n    labels:\n      glance.name: Vaultwarden\n      glance.icon: si:vaultwarden\n      glance.url: https://vaultwarden.domain.com\n      glance.category: dev-tools\n</code></pre>  Then you can use the `category` property to filter the containers:  <pre><code>- type: docker-containers\n  title: Dev tool containers\n  category: dev-tools\n\n- type: docker-containers\n  title: Media containers\n  category: media\n</code></pre>"},{"location":"docker-containers/#running-only","title":"<code>running-only</code>","text":"<p>Whether to only show running containers. If set to <code>true</code> only containers that are currently running will be displayed. If set to <code>false</code> all containers will be displayed regardless of their state.</p>"},{"location":"docker-containers/#labels","title":"Labels","text":"Name Description glance.name The name displayed in the UI. If not specified, the name of the container will be used. glance.icon See Icons for more information on how to specify icons glance.url The URL that the user will be redirected to when clicking on the container. glance.same-tab Whether to open the link in the same or a new tab. Default is <code>false</code>. glance.description A short description displayed in the UI. Default is empty. glance.hide Whether to hide the container. If set to <code>true</code> the container will not be displayed. Defaults to <code>false</code>. glance.id The custom ID of the container. Used to group containers under a single parent. glance.parent The ID of the parent container. Used to group containers under a single parent. glance.category The category of the container. Used to filter containers by category."},{"location":"document-branding-theme/","title":"Document, Branding, Theme","text":""},{"location":"document-branding-theme/#document","title":"Document","text":"<p>If you want to insert custom HTML into the <code>&lt;head&gt;</code> of the document for all pages, you can do so by using the <code>document</code> property. Example:</p> <pre><code>document:\n  head: |\n    &lt;script src=\"/assets/custom.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"document-branding-theme/#branding","title":"Branding","text":"<p>You can adjust the various parts of the branding through a top level <code>branding</code> property. Example:</p> <pre><code>branding:\n  custom-footer: |\n    &lt;p&gt;Powered by &lt;a href=\"https://github.com/glanceapp/glance\"&gt;Glance&lt;/a&gt;&lt;/p&gt;\n  logo-url: /assets/logo.png\n  favicon-url: /assets/logo.png\n  app-name: \"My Dashboard\"\n  app-icon-url: \"/assets/app-icon.png\"\n  app-background-color: \"#151519\"\n</code></pre>"},{"location":"document-branding-theme/#properties","title":"Properties","text":"Name Type Required Default hide-footer bool no false custom-footer string no logo-text string no G logo-url string no favicon-url string no app-name string no Glance app-icon-url string no Glance's default icon app-background-color string no Glance's default background color"},{"location":"document-branding-theme/#hide-footer","title":"<code>hide-footer</code>","text":"<p>Hides the footer when set to <code>true</code>.</p>"},{"location":"document-branding-theme/#custom-footer","title":"<code>custom-footer</code>","text":"<p>Specify custom HTML to use for the footer.</p>"},{"location":"document-branding-theme/#logo-text","title":"<code>logo-text</code>","text":"<p>Specify custom text to use instead of the \"G\" found in the navigation.</p>"},{"location":"document-branding-theme/#logo-url","title":"<code>logo-url</code>","text":"<p>Specify a URL to a custom image to use instead of the \"G\" found in the navigation. If both <code>logo-text</code> and <code>logo-url</code> are set, only <code>logo-url</code> will be used.</p>"},{"location":"document-branding-theme/#favicon-url","title":"<code>favicon-url</code>","text":"<p>Specify a URL to a custom image to use for the favicon.</p>"},{"location":"document-branding-theme/#app-name","title":"<code>app-name</code>","text":"<p>Specify the name of the web app shown in browser tab and PWA.</p>"},{"location":"document-branding-theme/#app-icon-url","title":"<code>app-icon-url</code>","text":"<p>Specify URL for PWA and browser tab icon (512x512 PNG).</p>"},{"location":"document-branding-theme/#app-background-color","title":"<code>app-background-color</code>","text":"<p>Specify background color for PWA. Must be a valid CSS color.</p>"},{"location":"document-branding-theme/#theme","title":"Theme","text":"<p>Theming is done through a top level <code>theme</code> property. Values for the colors are in HSL (hue, saturation, lightness) format. You can use a color picker like this one to convert colors from other formats to HSL. The values are separated by a space and <code>%</code> is not required for any of the numbers.</p> <p>Example:</p> <pre><code>theme:\n  # This will be the default theme\n  background-color: 100 20 10\n  primary-color: 40 90 40\n  contrast-multiplier: 1.1\n\n  disable-picker: false\n  presets:\n    gruvbox-dark:\n      background-color: 0 0 16\n      primary-color: 43 59 81\n      positive-color: 61 66 44\n      negative-color: 6 96 59\n\n    zebra:\n      light: true\n      background-color: 0 0 95\n      primary-color: 0 0 10\n      negative-color: 0 90 50\n</code></pre>"},{"location":"document-branding-theme/#available-themes","title":"Available themes","text":"<p>If you don't want to spend time configuring your own theme, there are several available themes which you can simply copy the values for.</p>"},{"location":"document-branding-theme/#properties_1","title":"Properties","text":"Name Type Required Default light boolean no false background-color HSL no 240 8 9 primary-color HSL no 43 50 70 positive-color HSL no same as <code>primary-color</code> negative-color HSL no 0 70 70 contrast-multiplier number no 1 text-saturation-multiplier number no 1 custom-css-file string no disable-picker bool false presets object no"},{"location":"document-branding-theme/#light","title":"<code>light</code>","text":"<p>Whether the scheme is light or dark. This does not change the background color, it inverts the text colors so that they look appropriately on a light background.</p>"},{"location":"document-branding-theme/#background-color","title":"<code>background-color</code>","text":"<p>Color of the page and widgets.</p>"},{"location":"document-branding-theme/#primary-color","title":"<code>primary-color</code>","text":"<p>Color used across the page, largely to indicate unvisited links.</p>"},{"location":"document-branding-theme/#positive-color","title":"<code>positive-color</code>","text":"<p>Used to indicate that something is positive, such as stock price being up, twitch channel being live or a monitored site being online. If not set, the value of <code>primary-color</code> will be used.</p>"},{"location":"document-branding-theme/#negative-color","title":"<code>negative-color</code>","text":"<p>Oppposite of <code>positive-color</code>.</p>"},{"location":"document-branding-theme/#contrast-multiplier","title":"<code>contrast-multiplier</code>","text":"<p>Used to increase or decrease the contrast (in other words visibility) of the text. A value of <code>1.3</code> means that the text will be 30% lighter/darker depending on the scheme. Use this if you think that some of the text on the page is too dark and hard to read. Example:</p> <p></p>"},{"location":"document-branding-theme/#text-saturation-multiplier","title":"<code>text-saturation-multiplier</code>","text":"<p>Used to increase or decrease the saturation of text, useful when using a custom background color with a high amount of saturation and needing the text to have a more neutral color. <code>0.5</code> means that the saturation will be 50% lower and <code>1.5</code> means that it'll be 50% higher.</p>"},{"location":"document-branding-theme/#custom-css-file","title":"<code>custom-css-file</code>","text":"<p>Path to a custom CSS file, either external or one from within the server configured assets path. Example:</p> <pre><code>theme:\n  custom-css-file: /assets/my-style.css\n</code></pre> <p>[!TIP]</p> <p>Because Glance uses a lot of utility classes it might be difficult to target some elements. To make it easier to style specific widgets, each widget has a <code>widget-type-{name}</code> class, so for example if you wanted to make the links inside just the RSS widget bigger you could use the following selector:</p> <pre><code>.widget-type-rss a {\n    font-size: 1.5rem;\n}\n</code></pre> <p>In addition, you can also use the <code>css-class</code> property which is available on every widget to set custom class names for individual widgets.</p>"},{"location":"document-branding-theme/#disable-picker","title":"<code>disable-picker</code>","text":"<p>When set to <code>true</code> hides the theme picker and disables the abiltity to switch between themes. All users who previously picked a non-default theme will be switched over to the default theme.</p>"},{"location":"document-branding-theme/#presets","title":"<code>presets</code>","text":"<p>Define additional theme presets that can be selected from the theme picker on the page. For each preset, you can specify the same properties as for the default theme, such as <code>background-color</code>, <code>primary-color</code>, <code>positive-color</code>, <code>negative-color</code>, <code>contrast-multiplier</code>, etc., except for the <code>custom-css-file</code> property.</p> <p>Example:</p> <pre><code>theme:\n  presets:\n    my-custom-dark-theme:\n      background-color: 229 19 23\n      contrast-multiplier: 1.2\n      primary-color: 222 74 74\n      positive-color: 96 44 68\n      negative-color: 359 68 71\n    my-custom-light-theme:\n      light: true\n      background-color: 220 23 95\n      contrast-multiplier: 1.1\n      primary-color: 220 91 54\n      positive-color: 109 58 40\n      negative-color: 347 87 44\n</code></pre> <p>To override the default dark and light themes, use the key names <code>default-dark</code> and <code>default-light</code>.</p>"},{"location":"extension/","title":"Extension","text":""},{"location":"extension/#extension","title":"Extension","text":"<p>Display a widget provided by an external source (3rd party). If you want to learn more about developing extensions, checkout the extensions documentation (WIP).</p> <pre><code>- type: extension\n  url: https://domain.com/widget/display-a-message\n  allow-potentially-dangerous-html: true\n  parameters:\n    message: Hello, world!\n</code></pre>"},{"location":"extension/#properties","title":"Properties","text":"Name Type Required Default url string yes fallback-content-type string no allow-potentially-dangerous-html boolean no false headers key &amp; value no parameters key &amp; value no"},{"location":"extension/#url","title":"<code>url</code>","text":"<p>The URL of the extension. Note that the query gets stripped from this URL and the one defined by <code>parameters</code> gets used instead.</p>"},{"location":"extension/#fallback-content-type","title":"<code>fallback-content-type</code>","text":"<p>Optionally specify the fallback content type of the extension if the URL does not return a valid <code>Widget-Content-Type</code> header. Currently the only supported value for this property is <code>html</code>.</p>"},{"location":"extension/#headers","title":"<code>headers</code>","text":"<p>Optionally specify the headers that will be sent with the request. Example:</p> <pre><code>headers:\n  x-api-key: ${SECRET_KEY}\n</code></pre>"},{"location":"extension/#allow-potentially-dangerous-html","title":"<code>allow-potentially-dangerous-html</code>","text":"<p>Whether to allow the extension to display HTML.</p> <p>[!WARNING]</p> <p>There's a reason this property is scary-sounding. It's intended to be used by developers who are comfortable with developing and using their own extensions. Do not enable it if you have no idea what it means or if you're not absolutely sure that the extension URL you're using is safe.</p>"},{"location":"extension/#parameters","title":"<code>parameters</code>","text":"<p>A list of keys and values that will be sent to the extension as query paramters.</p>"},{"location":"extensions/","title":"Extensions","text":"<p>[!IMPORTANT]</p> <p>This document as well as the extensions feature are a work in progress. The API may change in the future. You are responsible for maintaining your own extensions.</p>"},{"location":"extensions/#overview","title":"Overview","text":"<p>With the intention of requiring minimal knowledge in order to develop extensions, rather than being a convoluted protocol they are nothing more than an HTTP request to a server that returns a few special headers. The exchange between Glance and extensions can be seen in the following diagram:</p> <p></p> <p>If you know how to setup an HTTP server and a bit of HTML and CSS you're ready to start building your own extensions.</p> <p>[!TIP]</p> <p>By default, the extension widget has a cache time of 30 minutes. To avoid having to restart Glance after every extension change you can set the cache time of the widget to 1 second: <pre><code>- type: extension\n  url: http://localhost:8081\n  cache: 1s\n</code></pre></p>"},{"location":"extensions/#headers","title":"Headers","text":""},{"location":"extensions/#widget-title","title":"<code>Widget-Title</code>","text":"<p>Used to specify the title of the widget. If not provided, the widget's title will be \"Extension\".</p>"},{"location":"extensions/#widget-title-url","title":"<code>Widget-Title-URL</code>","text":"<p>Used to specify the URL that will be opened when the widget's title is clicked. If the user has specified a <code>title-url</code> in their config, it will take precedence over this header.</p>"},{"location":"extensions/#widget-content-type","title":"<code>Widget-Content-Type</code>","text":"<p>Used to specify the content type that will be returned by the extension. If not provided, the content will be shown as plain text.</p>"},{"location":"extensions/#widget-content-frameless","title":"<code>Widget-Content-Frameless</code>","text":"<p>When set to <code>true</code>, the widget's content will be displayed without the default background or \"frame\".</p>"},{"location":"extensions/#content-types","title":"Content Types","text":"<p>[!NOTE]</p> <p>Currently, <code>html</code> is the only supported content type. The long-term goal is to have generic content types such as <code>videos</code>, <code>forum-posts</code>, <code>markets</code>, <code>streams</code>, etc. which will be returned in JSON format and displayed by Glance using existing styles and functionality, allowing extension developers to achieve a native look while only focusing on providing data from their preferred source.</p>"},{"location":"extensions/#html","title":"<code>html</code>","text":"<p>Displays the content as HTML. This requires the user to have the <code>allow-potentially-dangerous-html</code> property set to <code>true</code>, otherwise the content will be shown as plain text.</p>"},{"location":"extensions/#using-existing-classes-and-functionality","title":"Using existing classes and functionality","text":"<p>Most of the features seen throughout Glance can easily be used in your custom HTML extensions. Below is an example of some of these features:</p> <pre><code>&lt;p class=\"color-subdue\"&gt;Text with subdued color&lt;/p&gt;\n&lt;p&gt;Text with base color&lt;/p&gt;\n&lt;p class=\"color-highlight\"&gt;Text with highlighted color&lt;/p&gt;\n&lt;p class=\"color-primary\"&gt;Text with primary color&lt;/p&gt;\n&lt;p class=\"color-positive\"&gt;Text with positive color&lt;/p&gt;\n&lt;p class=\"color-negative\"&gt;Text with negative color&lt;/p&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;p class=\"size-h1\"&gt;Font size 1&lt;/p&gt;\n&lt;p class=\"size-h2\"&gt;Font size 2&lt;/p&gt;\n&lt;p class=\"size-h3\"&gt;Font size 3&lt;/p&gt;\n&lt;p class=\"size-h4\"&gt;Font size 4&lt;/p&gt;\n&lt;p class=\"size-base\"&gt;Font size base&lt;/p&gt;\n&lt;p class=\"size-h5\"&gt;Font size 5&lt;/p&gt;\n&lt;p class=\"size-h6\"&gt;Font size 6&lt;/p&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;a class=\"visited-indicator\" href=\"#notvisitedprobably\"&gt;Link with visited indicator&lt;/a&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;a class=\"color-primary-if-not-visited\" href=\"#notvisitedprobably\"&gt;Link with primary color if not visited&lt;/a&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;p&gt;Event happened &lt;span data-dynamic-relative-time=\"&lt;unix timestamp&gt;\"&gt;&lt;/span&gt; ago&lt;/p&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;ul class=\"list-horizontal-text\"&gt;\n    &lt;li&gt;horizontal&lt;/li&gt;\n    &lt;li&gt;list&lt;/li&gt;\n    &lt;li&gt;with&lt;/li&gt;\n    &lt;li&gt;multiple&lt;/li&gt;\n    &lt;li&gt;text&lt;/li&gt;\n    &lt;li&gt;items&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;ul class=\"list list-gap-10 list-with-separator\"&gt;\n    &lt;li&gt;list&lt;/li&gt;\n    &lt;li&gt;with&lt;/li&gt;\n    &lt;li&gt;gap&lt;/li&gt;\n    &lt;li&gt;and&lt;/li&gt;\n    &lt;li&gt;horizontal&lt;/li&gt;\n    &lt;li&gt;lines&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;ul class=\"list collapsible-container\" data-collapse-after=\"3\"&gt;\n    &lt;li&gt;collapsible&lt;/li&gt;\n    &lt;li&gt;list&lt;/li&gt;\n    &lt;li&gt;with&lt;/li&gt;\n    &lt;li&gt;many&lt;/li&gt;\n    &lt;li&gt;items&lt;/li&gt;\n    &lt;li&gt;that&lt;/li&gt;\n    &lt;li&gt;will&lt;/li&gt;\n    &lt;li&gt;appear&lt;/li&gt;\n    &lt;li&gt;when&lt;/li&gt;\n    &lt;li&gt;you&lt;/li&gt;\n    &lt;li&gt;click&lt;/li&gt;\n    &lt;li&gt;the&lt;/li&gt;\n    &lt;li&gt;button&lt;/li&gt;\n    &lt;li&gt;below&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr class=\"margin-bottom-15\"&gt;\n\n&lt;p class=\"margin-bottom-10\"&gt;Lazily loaded image:&lt;/p&gt;\n\n&lt;img src=\"https://picsum.photos/200\" alt=\"\" loading=\"lazy\"&gt;\n\n&lt;hr class=\"margin-block-15\"&gt;\n\n&lt;p class=\"margin-bottom-10\"&gt;List of posts:&lt;/p&gt;\n\n&lt;ul class=\"list list-gap-14 collapsible-container\" data-collapse-after=\"5\"&gt;\n    &lt;li&gt;\n        &lt;a class=\"size-h3 color-primary-if-not-visited\" href=\"#link\"&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum, ipsa?&lt;/a&gt;\n        &lt;ul class=\"list-horizontal-text\"&gt;\n            &lt;li data-dynamic-relative-time=\"&lt;unix timestamp&gt;\"&gt;&lt;/li&gt;\n            &lt;li&gt;3,321 points&lt;/li&gt;\n            &lt;li&gt;139 comments&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a class=\"size-h3 color-primary-if-not-visited\" href=\"#link\"&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum, ipsa?&lt;/a&gt;\n        &lt;ul class=\"list-horizontal-text\"&gt;\n            &lt;li data-dynamic-relative-time=\"&lt;unix timestamp&gt;\"&gt;&lt;/li&gt;\n            &lt;li&gt;3,321 points&lt;/li&gt;\n            &lt;li&gt;139 comments&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a class=\"size-h3 color-primary-if-not-visited\" href=\"#link\"&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatum, ipsa?&lt;/a&gt;\n        &lt;ul class=\"list-horizontal-text\"&gt;\n            &lt;li data-dynamic-relative-time=\"&lt;unix timestamp&gt;\"&gt;&lt;/li&gt;\n            &lt;li&gt;3,321 points&lt;/li&gt;\n            &lt;li&gt;139 comments&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>All of that will result in the following:</p> <p></p> <p>Class names or features may change, once again, you are responsible for maintaining your own extensions.</p>"},{"location":"hacker-lobster/","title":"Hacker News & Lobster","text":""},{"location":"hacker-lobster/#hacker-news","title":"Hacker News","text":"<p>Display a list of posts from Hacker News.</p> <p>Example:</p> <pre><code>- type: hacker-news\n  limit: 15\n  collapse-after: 5\n</code></pre> <p>Preview: </p>"},{"location":"hacker-lobster/#properties","title":"Properties","text":"Name Type Required Default limit integer no 15 collapse-after integer no 5 comments-url-template string no https://news.ycombinator.com/item?id={POST-ID} sort-by string no top extra-sort-by string no"},{"location":"hacker-lobster/#comments-url-template","title":"<code>comments-url-template</code>","text":"<p>Used to replace the default link for post comments. Useful if you want to use an alternative front-end. Example:</p> <pre><code>comments-url-template: https://www.hckrnws.com/stories/{POST-ID}\n</code></pre> <p>Placeholders:</p> <p><code>{POST-ID}</code> - the ID of the post</p>"},{"location":"hacker-lobster/#sort-by","title":"<code>sort-by</code>","text":"<p>Used to specify the order in which the posts should get returned. Possible values are <code>top</code>, <code>new</code>, and <code>best</code>.</p>"},{"location":"hacker-lobster/#extra-sort-by","title":"<code>extra-sort-by</code>","text":"<p>Can be used to specify an additional sort which will be applied on top of the already sorted posts. By default does not apply any extra sorting and the only available option is <code>engagement</code>.</p> <p>The <code>engagement</code> sort tries to place the posts with the most points and comments on top, also prioritizing recent over old posts.</p>"},{"location":"hacker-lobster/#lobsters","title":"Lobsters","text":"<p>Display a list of posts from Lobsters.</p> <p>Example:</p> <pre><code>- type: lobsters\n  sort-by: hot\n  tags:\n    - go\n    - security\n    - linux\n  limit: 15\n  collapse-after: 5\n</code></pre> <p>Preview: </p>"},{"location":"hacker-lobster/#properties_1","title":"Properties","text":"Name Type Required Default instance-url string no https://lobste.rs/ custom-url string no limit integer no 15 collapse-after integer no 5 sort-by string no hot tags array no"},{"location":"hacker-lobster/#instance-url","title":"<code>instance-url</code>","text":"<p>The base URL for a lobsters instance hosted somewhere other than on lobste.rs. Example:</p> <pre><code>instance-url: https://www.journalduhacker.net/\n</code></pre>"},{"location":"hacker-lobster/#custom-url","title":"<code>custom-url</code>","text":"<p>A custom URL to retrieve lobsters posts from. If this is specified, the <code>instance-url</code>, <code>sort-by</code> and <code>tags</code> properties are ignored.</p>"},{"location":"hacker-lobster/#limit","title":"<code>limit</code>","text":"<p>The maximum number of posts to show.</p>"},{"location":"hacker-lobster/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many posts are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"hacker-lobster/#sort-by_1","title":"<code>sort-by</code>","text":"<p>The sort order in which posts are returned. Possible options are <code>hot</code> and <code>new</code>.</p>"},{"location":"hacker-lobster/#tags","title":"<code>tags</code>","text":"<p>Limit to posts containing one of the given tags. You cannot specify a sort order when filtering by tags, it will default to <code>hot</code>.</p>"},{"location":"iframe-html/","title":"Iframe & HTML","text":""},{"location":"iframe-html/#iframe","title":"iframe","text":"<p>Embed an iframe as a widget.</p> <p>Example:</p> <pre><code>- type: iframe\n  source: &lt;url&gt;\n  height: 400\n</code></pre>"},{"location":"iframe-html/#properties","title":"Properties","text":"Name Type Required Default source string yes height integer no 300"},{"location":"iframe-html/#source","title":"<code>source</code>","text":"<p>The source of the iframe.</p>"},{"location":"iframe-html/#height","title":"<code>height</code>","text":"<p>The height of the iframe. The minimum allowed height is 50.</p>"},{"location":"iframe-html/#html","title":"HTML","text":"<p>Embed any HTML.</p> <p>Example:</p> <pre><code>- type: html\n  source: |\n    &lt;p&gt;Hello, &lt;span class=\"color-primary\"&gt;World&lt;/span&gt;!&lt;/p&gt;\n</code></pre> <p>Note the use of <code>|</code> after <code>source:</code>, this allows you to insert a multi-line string.</p>"},{"location":"markets/","title":"Markets","text":""},{"location":"markets/#markets","title":"Markets","text":"<p>Display a list of markets, their current value, change for the day and a small 21d chart. Data is taken from Yahoo Finance.</p> <p>Example:</p> <pre><code>- type: markets\n  markets:\n    - symbol: SPY\n      name: S&amp;P 500\n    - symbol: BTC-USD\n      name: Bitcoin\n      chart-link: https://www.tradingview.com/chart/?symbol=INDEX:BTCUSD\n    - symbol: NVDA\n      name: NVIDIA\n    - symbol: AAPL\n      symbol-link: https://www.google.com/search?tbm=nws&amp;q=apple\n      name: Apple\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"markets/#properties","title":"Properties","text":"Name Type Required markets array yes sort-by string no chart-link-template string no symbol-link-template string no"},{"location":"markets/#markets_1","title":"<code>markets</code>","text":"<p>An array of markets for which to display information about.</p>"},{"location":"markets/#sort-by","title":"<code>sort-by</code>","text":"<p>By default the markets are displayed in the order they were defined. You can customize their ordering by setting the <code>sort-by</code> property to <code>change</code> for descending order based on the stock's percentage change (e.g. 1% would be sorted higher than -1%) or <code>absolute-change</code> for descending order based on the stock's absolute price change (e.g. -1% would be sorted higher than +0.5%).</p>"},{"location":"markets/#chart-link-template","title":"<code>chart-link-template</code>","text":"<p>A template for the link to go to when clicking on the chart that will be applied to all markets. The value <code>{SYMBOL}</code> will be replaced with the symbol of the market. You can override this on a per-market basis by specifying a <code>chart-link</code> property. Example:</p> <pre><code>chart-link-template: https://www.tradingview.com/chart/?symbol={SYMBOL}\n</code></pre>"},{"location":"markets/#symbol-link-template","title":"<code>symbol-link-template</code>","text":"<p>A template for the link to go to when clicking on the symbol that will be applied to all markets. The value <code>{SYMBOL}</code> will be replaced with the symbol of the market. You can override this on a per-market basis by specifying a <code>symbol-link</code> property. Example:</p> <pre><code>symbol-link-template: https://www.google.com/search?tbm=nws&amp;q={SYMBOL}\n</code></pre>"},{"location":"markets/#properties-for-each-market","title":"Properties for each market","text":"Name Type Required symbol string yes name string no symbol-link string no chart-link string no <p><code>symbol</code></p> <p>The symbol, as seen in Yahoo Finance.</p> <p><code>name</code></p> <p>The name that will be displayed under the symbol.</p> <p><code>symbol-link</code></p> <p>The link to go to when clicking on the symbol.</p> <p><code>chart-link</code></p> <p>The link to go to when clicking on the chart.</p>"},{"location":"monitor-releases/","title":"Monitor & Releases","text":""},{"location":"monitor-releases/#monitor","title":"Monitor","text":"<p>Display a list of sites and whether they are reachable (online) or not. This is determined by sending a GET request to the specified URL, if the response is 200 then the site is OK. The time it took to receive a response is also shown in milliseconds.</p> <p>Example:</p> <pre><code>- type: monitor\n  cache: 1m\n  title: Services\n  sites:\n    - title: Jellyfin\n      url: https://jellyfin.yourdomain.com\n      icon: /assets/jellyfin-logo.png\n    - title: Gitea\n      url: https://gitea.yourdomain.com\n      icon: /assets/gitea-logo.png\n    - title: Immich\n      url: https://immich.yourdomain.com\n      icon: /assets/immich-logo.png\n    - title: AdGuard Home\n      url: https://adguard.yourdomain.com\n      icon: /assets/adguard-logo.png\n    - title: Vaultwarden\n      url: https://vault.yourdomain.com\n      icon: /assets/vaultwarden-logo.png\n</code></pre> <p>Preview:</p> <p></p> <p>You can hover over the \"ERROR\" text to view more information.</p>"},{"location":"monitor-releases/#properties","title":"Properties","text":"Name Type Required Default sites array yes style string no show-failing-only boolean no false"},{"location":"monitor-releases/#show-failing-only","title":"<code>show-failing-only</code>","text":"<p>Shows only a list of failing sites when set to <code>true</code>.</p>"},{"location":"monitor-releases/#style","title":"<code>style</code>","text":"<p>Used to change the appearance of the widget. Possible values are <code>compact</code>.</p> <p>Preview of <code>compact</code>:</p> <p></p>"},{"location":"monitor-releases/#sites","title":"<code>sites</code>","text":"<p>Properties for each site:</p> Name Type Required Default title string yes url string yes check-url string no error-url string no icon string no timeout string no 3s allow-insecure boolean no false same-tab boolean no false alt-status-codes array no basic-auth object no <p><code>title</code></p> <p>The title used to indicate the site.</p> <p><code>url</code></p> <p>The URL of the monitored service, which must be reachable by Glance, and will be used as the link to go to when clicking on the title. If <code>check-url</code> is not specified, this is used as the status check.</p> <p><code>check-url</code></p> <p>The URL which will be requested and its response will determine the status of the site. If not specified, the <code>url</code> property is used.</p> <p><code>error-url</code></p> <p>If the monitored service returns an error, the user will be redirected here. If not specified, the <code>url</code> property is used.</p> <p><code>icon</code></p> <p>See Icons for more information on how to specify icons.</p> <p><code>timeout</code></p> <p>How long to wait for a response from the server before considering it unreachable. The value is a string and must be a number followed by one of s, m, h, d. Example: <code>5s</code> for 5 seconds, <code>1m</code> for 1 minute, etc.</p> <p><code>allow-insecure</code></p> <p>Whether to ignore invalid/self-signed certificates.</p> <p><code>same-tab</code></p> <p>Whether to open the link in the same or a new tab.</p> <p><code>alt-status-codes</code></p> <p>Status codes other than 200 that you want to return \"OK\".</p> <pre><code>alt-status-codes:\n  - 403\n</code></pre> <p><code>basic-auth</code></p> <p>HTTP Basic Authentication credentials for protected sites.</p> <pre><code>basic-auth:\n  username: your-username\n  password: your-password\n</code></pre>"},{"location":"monitor-releases/#releases","title":"Releases","text":"<p>Display a list of latest releases for specific repositories on Github, GitLab, Codeberg or Docker Hub.</p> <p>Example:</p> <pre><code>- type: releases\n  show-source-icon: true\n  repositories:\n    - go-gitea/gitea\n    - jellyfin/jellyfin\n    - glanceapp/glance\n    - codeberg:redict/redict\n    - gitlab:fdroid/fdroidclient\n    - dockerhub:gotify/server\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"monitor-releases/#properties_1","title":"Properties","text":"Name Type Required Default repositories array yes show-source-icon boolean no false token string no gitlab-token string no limit integer no 10 collapse-after integer no 5"},{"location":"monitor-releases/#repositories","title":"<code>repositories</code>","text":"<p>A list of repositores to fetch the latest release for. Only the name/repo is required, not the full URL. A prefix can be specified for repositories hosted elsewhere such as GitLab, Codeberg and Docker Hub. Example:</p> <pre><code>repositories:\n  - gitlab:inkscape/inkscape\n  - dockerhub:glanceapp/glance\n  - codeberg:redict/redict\n</code></pre> <p>Official images on Docker Hub can be specified by omitting the owner:</p> <pre><code>repositories:\n  - dockerhub:nginx\n  - dockerhub:node\n  - dockerhub:alpine\n</code></pre> <p>You can also specify exact tags for Docker Hub images:</p> <pre><code>repositories:\n  - dockerhub:nginx:latest\n  - dockerhub:nginx:stable-alpine\n</code></pre> <p>To include prereleases you can specify the repository as an object and use the <code>include-prereleases</code> property:</p> <p>Note: This feature is currently only available for GitHub repositories.</p> <pre><code>repositories:\n  - gitlab:inkscape/inkscape\n  - repository: glanceapp/glance\n    include-prereleases: true\n  - codeberg:redict/redict\n</code></pre>"},{"location":"monitor-releases/#show-source-icon","title":"<code>show-source-icon</code>","text":"<p>Shows an icon of the source (GitHub/GitLab/Codeberg/Docker Hub) next to the repository name when set to <code>true</code>.</p>"},{"location":"monitor-releases/#token","title":"<code>token</code>","text":"<p>Without authentication Github allows for up to 60 requests per hour. You can easily exceed this limit and start seeing errors if you're tracking lots of repositories or your cache time is low. To circumvent this you can create a read only token from your Github account and provide it here.</p> <p>You can also specify the value for this token through an ENV variable using the syntax <code>${GITHUB_TOKEN}</code> where <code>GITHUB_TOKEN</code> is the name of the variable that holds the token. If you've installed Glance through docker you can specify the token in your docker-compose:</p> <pre><code>services:\n  glance:\n    image: glanceapp/glance\n    environment:\n      - GITHUB_TOKEN=&lt;your token&gt;\n</code></pre> <p>and then use it in your <code>glance.yml</code> like this:</p> <pre><code>- type: releases\n  token: ${GITHUB_TOKEN}\n  repositories: ...\n</code></pre> <p>This way you can safely check your <code>glance.yml</code> in version control without exposing the token.</p>"},{"location":"monitor-releases/#gitlab-token","title":"<code>gitlab-token</code>","text":"<p>Same as the above but used when fetching GitLab releases.</p>"},{"location":"monitor-releases/#limit","title":"<code>limit</code>","text":"<p>The maximum number of releases to show.</p>"},{"location":"monitor-releases/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many releases are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"pages-columns/","title":"Pages & Columns","text":""},{"location":"pages-columns/#pages-columns","title":"Pages &amp; Columns","text":"<p>Using pages and columns is how widgets are organized. Each page contains up to 3 columns and each column can have any number of widgets.</p>"},{"location":"pages-columns/#pages","title":"Pages","text":"<p>Pages are defined through a top level <code>pages</code> property. The page defined first becomes the home page and all pages get automatically added to the navigation bar in the order that they were defined. Example:</p> <pre><code>pages:\n  - name: Home\n    columns: ...\n\n  - name: Videos\n    columns: ...\n\n  - name: Homelab\n    columns: ...\n</code></pre>"},{"location":"pages-columns/#properties","title":"Properties","text":"Name Type Required Default name string yes slug string no width string no desktop-navigation-width string no center-vertically boolean no false hide-desktop-navigation boolean no false show-mobile-header boolean no false head-widgets array no columns array yes"},{"location":"pages-columns/#name","title":"<code>name</code>","text":"<p>The name of the page which gets shown in the navigation bar.</p>"},{"location":"pages-columns/#slug","title":"<code>slug</code>","text":"<p>The URL friendly version of the title which is used to access the page. For example if the title of the page is \"RSS Feeds\" you can make the page accessible via <code>localhost:8080/feeds</code> by setting the slug to <code>feeds</code>. If not defined, it will automatically be generated from the title.</p>"},{"location":"pages-columns/#width","title":"<code>width</code>","text":"<p>The maximum width of the page on desktop. Possible values are <code>default</code>, <code>slim</code> and <code>wide</code>.</p>"},{"location":"pages-columns/#desktop-navigation-width","title":"<code>desktop-navigation-width</code>","text":"<p>The maximum width of the desktop navigation. Useful if you have a few pages that use a different width than the rest and don't want the navigation to jump abruptly when going to and away from those pages. Possible values are <code>default</code>, <code>slim</code> and <code>wide</code>.</p> <p>Here are the pixel equivalents for each value:</p> <ul> <li>default: <code>1600px</code></li> <li>slim: <code>1100px</code></li> <li>wide: <code>1920px</code></li> </ul> <p>[!NOTE]</p> <p>When using <code>slim</code>, the maximum number of columns allowed for that page is <code>2</code>.</p>"},{"location":"pages-columns/#center-vertically","title":"<code>center-vertically</code>","text":"<p>When set to <code>true</code>, vertically centers the content on the page. Has no effect if the content is taller than the height of the viewport.</p>"},{"location":"pages-columns/#hide-desktop-navigation","title":"<code>hide-desktop-navigation</code>","text":"<p>Whether to show the navigation links at the top of the page on desktop.</p>"},{"location":"pages-columns/#show-mobile-header","title":"<code>show-mobile-header</code>","text":"<p>Whether to show a header displaying the name of the page on mobile. The header purposefully has a lot of vertical whitespace in order to push the content down and make it easier to reach on tall devices.</p> <p>Preview:</p> <p></p>"},{"location":"pages-columns/#head-widgets","title":"<code>head-widgets</code>","text":"<p>Head widgets will be shown at the top of the page, above the columns, and take up the combined width of all columns. You can specify any widget, though some will look better than others, such as the markets, RSS feed with <code>horizontal-cards</code> style, and videos widgets. Example:</p> <p></p> <pre><code>pages:\n  - name: Home\n    head-widgets:\n      - type: markets\n        hide-header: true\n        markets:\n          - symbol: SPY\n            name: S&amp;P 500\n          - symbol: BTC-USD\n            name: Bitcoin\n          - symbol: NVDA\n            name: NVIDIA\n          - symbol: AAPL\n            name: Apple\n          - symbol: MSFT\n            name: Microsoft\n\n    columns:\n      - size: small\n        widgets:\n          - type: calendar\n      - size: full\n        widgets:\n          - type: hacker-news\n      - size: small\n        widgets:\n          - type: weather\n            location: London, United Kingdom\n</code></pre>"},{"location":"pages-columns/#columns","title":"Columns","text":"<p>Columns are defined for each page using a <code>columns</code> property. There are two types of columns - <code>full</code> and <code>small</code>, which refers to their width. A small column takes up a fixed amount of width (300px) and a full column takes up the all of the remaining width. You can have up to 3 columns per page and you must have either 1 or 2 full columns. Example:</p> <pre><code>pages:\n  - name: Home\n    columns:\n      - size: small\n        widgets: ...\n      - size: full\n        widgets: ...\n      - size: small\n        widgets: ...\n</code></pre>"},{"location":"pages-columns/#properties_1","title":"Properties","text":"Name Type Required size string yes widgets array no <p>Here are some of the possible column configurations:</p> <p></p> <pre><code>columns:\n  - size: small\n    widgets: ...\n  - size: full\n    widgets: ...\n  - size: small\n    widgets: ...\n</code></pre> <p></p> <pre><code>columns:\n  - size: full\n    widgets: ...\n  - size: small\n    widgets: ...\n</code></pre> <p></p> <pre><code>columns:\n  - size: full\n    widgets: ...\n  - size: full\n    widgets: ...\n</code></pre>"},{"location":"preconfigured-pages/","title":"Preconfigured pages","text":"<p>Don't want to spend time configuring pages from scratch? No problem! Simply copy the config from the ones below.</p> <p>Pull requests with your page configurations are welcome!</p> <p>[!NOTE]</p> <p>Pages must be placed under a top level <code>pages:</code> key, you can read more about that here.</p>"},{"location":"preconfigured-pages/#startpage","title":"Startpage","text":"View config (requires Glance <code>v0.6.0</code> or higher) <pre><code>- name: Startpage\n  width: slim\n  hide-desktop-navigation: true\n  center-vertically: true\n  columns:\n    - size: full\n      widgets:\n        - type: search\n          autofocus: true\n\n        - type: monitor\n          cache: 1m\n          title: Services\n          sites:\n            - title: Jellyfin\n              url: https://yourdomain.com/\n              icon: si:jellyfin\n            - title: Gitea\n              url: https://yourdomain.com/\n              icon: si:gitea\n            - title: qBittorrent # only for Linux ISOs, of course\n              url: https://yourdomain.com/\n              icon: si:qbittorrent\n            - title: Immich\n              url: https://yourdomain.com/\n              icon: si:immich\n            - title: AdGuard Home\n              url: https://yourdomain.com/\n              icon: si:adguard\n            - title: Vaultwarden\n              url: https://yourdomain.com/\n              icon: si:vaultwarden\n\n        - type: bookmarks\n          groups:\n            - title: General\n              links:\n                - title: Gmail\n                  url: https://mail.google.com/mail/u/0/\n                - title: Amazon\n                  url: https://www.amazon.com/\n                - title: Github\n                  url: https://github.com/\n            - title: Entertainment\n              links:\n                - title: YouTube\n                  url: https://www.youtube.com/\n                - title: Prime Video\n                  url: https://www.primevideo.com/\n                - title: Disney+\n                  url: https://www.disneyplus.com/\n            - title: Social\n              links:\n                - title: Reddit\n                  url: https://www.reddit.com/\n                - title: Twitter\n                  url: https://twitter.com/\n                - title: Instagram\n                  url: https://www.instagram.com/\n</code></pre>"},{"location":"preconfigured-pages/#markets","title":"Markets","text":"View config (requires Glance <code>v0.6.0</code> or higher) <pre><code>  - name: Markets\n    columns:\n      - size: small\n        widgets:\n          - type: markets\n            title: Indices\n            markets:\n              - symbol: SPY\n                name: S&amp;P 500\n              - symbol: DX-Y.NYB\n                name: Dollar Index\n\n          - type: markets\n            title: Crypto\n            markets:\n              - symbol: BTC-USD\n                name: Bitcoin\n              - symbol: ETH-USD\n                name: Ethereum\n\n          - type: markets\n            title: Stocks\n            sort-by: absolute-change\n            markets:\n              - symbol: NVDA\n                name: NVIDIA\n              - symbol: AAPL\n                name: Apple\n              - symbol: MSFT\n                name: Microsoft\n              - symbol: GOOGL\n                name: Google\n              - symbol: AMD\n                name: AMD\n              - symbol: RDDT\n                name: Reddit\n              - symbol: AMZN\n                name: Amazon\n              - symbol: TSLA\n                name: Tesla\n              - symbol: INTC\n                name: Intel\n              - symbol: META\n                name: Meta\n\n      - size: full\n        widgets:\n          - type: rss\n            title: News\n            style: horizontal-cards\n            feeds:\n              - url: https://feeds.bloomberg.com/markets/news.rss\n                title: Bloomberg\n              - url: https://moxie.foxbusiness.com/google-publisher/markets.xml\n                title: Fox Business\n              - url: https://moxie.foxbusiness.com/google-publisher/technology.xml\n                title: Fox Business\n\n          - type: group\n            widgets:\n              - type: reddit\n                show-thumbnails: true\n                subreddit: technology\n              - type: reddit\n                show-thumbnails: true\n                subreddit: wallstreetbets\n\n          - type: videos\n            style: grid-cards\n            collapse-after-rows: 3\n            channels:\n              - UCvSXMi2LebwJEM1s4bz5IBA # New Money\n              - UCV6KDgJskWaEckne5aPA0aQ # Graham Stephan\n              - UCAzhpt9DmG6PnHXjmJTvRGQ # Federal Reserve\n\n      - size: small\n        widgets:\n          - type: rss\n            title: News\n            limit: 30\n            collapse-after: 13\n            feeds:\n              - url: https://www.ft.com/technology?format=rss\n                title: Financial Times\n              - url: https://feeds.a.dj.com/rss/RSSMarketsMain.xml\n                title: Wall Street Journal\n</code></pre>"},{"location":"preconfigured-pages/#gaming","title":"Gaming","text":"View config (requires Glance <code>v0.6.0</code> or higher) <pre><code>- name: Gaming\n  columns:\n    - size: small\n      widgets:\n        - type: twitch-top-games\n          limit: 20\n          collapse-after: 13\n          exclude:\n            - just-chatting\n            - pools-hot-tubs-and-beaches\n            - music\n            - art\n            - asmr\n\n    - size: full\n      widgets:\n        - type: group\n          widgets:\n            - type: reddit\n              show-thumbnails: true\n              subreddit: pcgaming\n            - type: reddit\n              subreddit: games\n\n        - type: videos\n          style: grid-cards\n          collapse-after-rows: 3\n          channels:\n            - UCNvzD7Z-g64bPXxGzaQaa4g # gameranx\n            - UCZ7AeeVbyslLM_8-nVy2B8Q # Skill Up\n            - UCHDxYLv8iovIbhrfl16CNyg # GameLinked\n            - UC9PBzalIcEQCsiIkq36PyUA # Digital Foundry\n\n    - size: small\n      widgets:\n        - type: reddit\n          subreddit: gamingnews\n          limit: 7\n          style: vertical-cards\n</code></pre>"},{"location":"reddit/","title":"Reddit","text":""},{"location":"reddit/#reddit","title":"Reddit","text":"<p>Display a list of posts from a specific subreddit.</p> <p>[!WARNING]</p> <p>Reddit does not allow unauthorized API access from VPS IPs, if you're hosting Glance on a VPS you will get a 403 response. As a workaround you can either register an app on Reddit and use the generated ID and secret in the widget configuration to authenticate your requests (see <code>app-auth</code> property), use a proxy (see <code>proxy</code> property) or route the traffic from Glance through a VPN.</p> <p>Example:</p> <pre><code>- type: reddit\n  subreddit: technology\n</code></pre>"},{"location":"reddit/#properties","title":"Properties","text":"Name Type Required Default subreddit string yes style string no vertical-list show-thumbnails boolean no false show-flairs boolean no false limit integer no 15 collapse-after integer no 5 comments-url-template string no https://www.reddit.com/{POST-PATH} request-url-template string no proxy string or multiple parameters no sort-by string no hot top-period string no day search string no extra-sort-by string no app-auth object no"},{"location":"reddit/#subreddit","title":"<code>subreddit</code>","text":"<p>The subreddit for which to fetch the posts from.</p>"},{"location":"reddit/#style","title":"<code>style</code>","text":"<p>Used to change the appearance of the widget. Possible values are <code>vertical-list</code>, <code>horizontal-cards</code> and <code>vertical-cards</code>. The first two were designed for full columns and the last for small columns.</p> <p><code>vertical-list</code></p> <p></p> <p><code>horizontal-cards</code></p> <p></p> <p><code>vertical-cards</code></p> <p></p>"},{"location":"reddit/#show-thumbnails","title":"<code>show-thumbnails</code>","text":"<p>Shows or hides thumbnails next to the post. This only works if the <code>style</code> is <code>vertical-list</code>. Preview:</p> <p></p> <p>[!NOTE]</p> <p>Thumbnails don't work for some subreddits due to Reddit's API not returning the thumbnail URL. No workaround for this yet.</p>"},{"location":"reddit/#show-flairs","title":"<code>show-flairs</code>","text":"<p>Shows post flairs when set to <code>true</code>.</p>"},{"location":"reddit/#limit","title":"<code>limit</code>","text":"<p>The maximum number of posts to show.</p>"},{"location":"reddit/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many posts are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse. Not available when using the <code>vertical-cards</code> and <code>horizontal-cards</code> styles.</p>"},{"location":"reddit/#comments-url-template","title":"<code>comments-url-template</code>","text":"<p>Used to replace the default link for post comments. Useful if you want to use the old Reddit design or any other 3rd party front-end. Example:</p> <pre><code>comments-url-template: https://old.reddit.com/{POST-PATH}\n</code></pre> <p>Placeholders:</p> <p><code>{POST-PATH}</code> - the full path to the post, such as:</p> <pre><code>r/selfhosted/comments/bsp01i/welcome_to_rselfhosted_please_read_this_first/\n</code></pre> <p><code>{POST-ID}</code> - the ID that comes after <code>/comments/</code></p> <p><code>{SUBREDDIT}</code> - the subreddit name</p>"},{"location":"reddit/#request-url-template","title":"<code>request-url-template</code>","text":"<p>A custom request URL that will be used to fetch the data. This is useful when you're hosting Glance on a VPS where Reddit is blocking the requests and you want to route them through a proxy that accepts the URL as either a part of the path or a query parameter.</p> <p>Placeholders:</p> <p><code>{REQUEST-URL}</code> - will be templated and replaced with the expanded request URL (i.e. https://www.reddit.com/r/selfhosted/hot.json). Example:</p> <pre><code>https://proxy/{REQUEST-URL}\nhttps://your.proxy/?url={REQUEST-URL}\n</code></pre>"},{"location":"reddit/#proxy","title":"<code>proxy</code>","text":"<p>A custom HTTP/HTTPS proxy URL that will be used to fetch the data. This is useful when you're hosting Glance on a VPS where Reddit is blocking the requests and you want to bypass the restriction by routing the requests through a proxy. Example:</p> <pre><code>proxy: http://user:pass@proxy.com:8080\nproxy: https://user:pass@proxy.com:443\n</code></pre> <p>Alternatively, you can specify the proxy URL as well as additional options by using multiple parameters:</p> <pre><code>proxy:\n  url: http://proxy.com:8080\n  allow-insecure: true\n  timeout: 10s\n</code></pre>"},{"location":"reddit/#allow-insecure","title":"<code>allow-insecure</code>","text":"<p>When set to <code>true</code>, allows the use of insecure connections such as when the proxy has a self-signed certificate.</p>"},{"location":"reddit/#timeout","title":"<code>timeout</code>","text":"<p>The maximum time to wait for a response from the proxy. The value is a string and must be a number followed by one of s, m, h, d. Example: <code>10s</code> for 10 seconds, <code>1m</code> for 1 minute, etc</p>"},{"location":"reddit/#sort-by","title":"<code>sort-by</code>","text":"<p>Can be used to specify the order in which the posts should get returned. Possible values are <code>hot</code>, <code>new</code>, <code>top</code> and <code>rising</code>.</p>"},{"location":"reddit/#top-period","title":"<code>top-period</code>","text":"<p>Available only when <code>sort-by</code> is set to <code>top</code>. Possible values are <code>hour</code>, <code>day</code>, <code>week</code>, <code>month</code>, <code>year</code> and <code>all</code>.</p>"},{"location":"reddit/#search","title":"<code>search</code>","text":"<p>Keywords to search for. Searching within specific fields is also possible, though keep in mind that Reddit may remove the ability to use any of these at any time:</p> <p></p>"},{"location":"reddit/#extra-sort-by","title":"<code>extra-sort-by</code>","text":"<p>Can be used to specify an additional sort which will be applied on top of the already sorted posts. By default does not apply any extra sorting and the only available option is <code>engagement</code>.</p> <p>The <code>engagement</code> sort tries to place the posts with the most points and comments on top, also prioritizing recent over old posts.</p>"},{"location":"reddit/#app-auth","title":"<code>app-auth</code>","text":"<pre><code>widgets:\n  - type: reddit\n    subreddit: technology\n    app-auth:\n      name: ${REDDIT_APP_NAME}\n      id: ${REDDIT_APP_CLIENT_ID}\n      secret: ${REDDIT_APP_SECRET}\n</code></pre> <p>To register an app on Reddit, go to this page.</p>"},{"location":"repo-bookmarks/","title":"Repository & Bookmarks","text":""},{"location":"repo-bookmarks/#repository","title":"Repository","text":"<p>Display general information about a repository as well as a list of the latest open pull requests and issues.</p> <p>Example:</p> <pre><code>- type: repository\n  repository: glanceapp/glance\n  pull-requests-limit: 5\n  issues-limit: 3\n  commits-limit: 3\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"repo-bookmarks/#properties","title":"Properties","text":"Name Type Required Default repository string yes token string no pull-requests-limit integer no 3 issues-limit integer no 3 commits-limit integer no -1"},{"location":"repo-bookmarks/#repository_1","title":"<code>repository</code>","text":"<p>The owner and repository name that will have their information displayed.</p>"},{"location":"repo-bookmarks/#token","title":"<code>token</code>","text":"<p>Without authentication Github allows for up to 60 requests per hour. You can easily exceed this limit and start seeing errors if your cache time is low or you have many instances of this widget. To circumvent this you can create a read only token from your Github account and provide it here.</p>"},{"location":"repo-bookmarks/#pull-requests-limit","title":"<code>pull-requests-limit</code>","text":"<p>The maximum number of latest open pull requests to show. Set to <code>-1</code> to not show any.</p>"},{"location":"repo-bookmarks/#issues-limit","title":"<code>issues-limit</code>","text":"<p>The maximum number of latest open issues to show. Set to <code>-1</code> to not show any.</p>"},{"location":"repo-bookmarks/#commits-limit","title":"<code>commits-limit</code>","text":"<p>The maximum number of lastest commits to show from the default branch. Set to <code>-1</code> to not show any.</p>"},{"location":"repo-bookmarks/#bookmarks","title":"Bookmarks","text":"<p>Display a list of links which can be grouped.</p> <p>Example:</p> <pre><code>- type: bookmarks\n  groups:\n    - links:\n        - title: Gmail\n          url: https://mail.google.com/mail/u/0/\n        - title: Amazon\n          url: https://www.amazon.com/\n        - title: Github\n          url: https://github.com/\n        - title: Wikipedia\n          url: https://en.wikipedia.org/\n    - title: Entertainment\n      color: 10 70 50\n      links:\n        - title: Netflix\n          url: https://www.netflix.com/\n        - title: Disney+\n          url: https://www.disneyplus.com/\n        - title: YouTube\n          url: https://www.youtube.com/\n        - title: Prime Video\n          url: https://www.primevideo.com/\n    - title: Social\n      color: 200 50 50\n      links:\n        - title: Reddit\n          url: https://www.reddit.com/\n        - title: Twitter\n          url: https://twitter.com/\n        - title: Instagram\n          url: https://www.instagram.com/\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"repo-bookmarks/#properties_1","title":"Properties","text":"Name Type Required groups array yes"},{"location":"repo-bookmarks/#groups","title":"<code>groups</code>","text":"<p>An array of groups which can optionally have a title and a custom color.</p>"},{"location":"repo-bookmarks/#properties-for-each-group","title":"Properties for each group","text":"Name Type Required Default title string no color HSL no the primary color of the theme links array yes same-tab boolean no false hide-arrow boolean no false target string no <p>[!TIP]</p> <p>You can set <code>same-tab</code>, <code>hide-arrow</code> and <code>target</code> either on the group which will apply them to all links in that group, or on each individual link which will override the value set on the group.</p>"},{"location":"repo-bookmarks/#properties-for-each-link","title":"Properties for each link","text":"Name Type Required Default title string yes url string yes description string no icon string no same-tab boolean no false hide-arrow boolean no false target string no <p><code>icon</code></p> <p>See Icons for more information on how to specify icons.</p> <p><code>same-tab</code></p> <p>Whether to open the link in the same tab or a new one.</p> <p><code>hide-arrow</code></p> <p>Whether to hide the colored arrow on each link.</p> <p><code>target</code></p> <p>Set a custom value for the link's <code>target</code> attribute. Possible values are <code>_blank</code>, <code>_self</code>, <code>_parent</code> and <code>_top</code>, you can read more about what they do here. This property has precedence over <code>same-tab</code>.</p>"},{"location":"rss-videos/","title":"RSS & Videos","text":""},{"location":"rss-videos/#rss","title":"RSS","text":"<p>Display a list of articles from multiple RSS feeds.</p> <p>Example:</p> <pre><code>- type: rss\n  title: News\n  style: horizontal-cards\n  feeds:\n    - url: https://feeds.bloomberg.com/markets/news.rss\n      title: Bloomberg\n    - url: https://moxie.foxbusiness.com/google-publisher/markets.xml\n      title: Fox Business\n    - url: https://moxie.foxbusiness.com/google-publisher/technology.xml\n      title: Fox Business\n</code></pre>"},{"location":"rss-videos/#properties","title":"Properties","text":"Name Type Required Default style string no vertical-list feeds array yes thumbnail-height float no 10 card-height float no 27 limit integer no 25 preserve-order bool no false single-line-titles boolean no false collapse-after integer no 5"},{"location":"rss-videos/#limit","title":"<code>limit</code>","text":"<p>The maximum number of articles to show.</p>"},{"location":"rss-videos/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many articles are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"rss-videos/#preserve-order","title":"<code>preserve-order</code>","text":"<p>When set to <code>true</code>, the order of the articles will be preserved as they are in the feeds. Useful if a feed uses its own sorting order which denotes the importance of the articles. If you use this property while having a lot of feeds, it's recommended to set a <code>limit</code> to each individual feed since if the first defined feed has 15 articles, the articles from the second feed will start after the 15th article in the list.</p>"},{"location":"rss-videos/#single-line-titles","title":"<code>single-line-titles</code>","text":"<p>When set to <code>true</code>, truncates the title of each post if it exceeds one line. Only applies when the style is set to <code>vertical-list</code>.</p>"},{"location":"rss-videos/#style","title":"<code>style</code>","text":"<p>Used to change the appearance of the widget. Possible values are:</p> <ul> <li><code>vertical-list</code> - suitable for <code>full</code> and <code>small</code> columns</li> <li><code>detailed-list</code> - suitable for <code>full</code> columns</li> <li><code>horizontal-cards</code> - suitable for <code>full</code> columns</li> <li><code>horizontal-cards-2</code> - suitable for <code>full</code> columns</li> </ul> <p>Below is a preview of each style:</p> <p><code>vertical-list</code></p> <p></p> <p><code>detailed-list</code></p> <p></p> <p><code>horizontal-cards</code></p> <p></p> <p><code>horizontal-cards-2</code></p> <p></p>"},{"location":"rss-videos/#thumbnail-height","title":"<code>thumbnail-height</code>","text":"<p>Used to modify the height of the thumbnails. Works only when the style is set to <code>horizontal-cards</code>. The default value is <code>10</code> and the units are <code>rem</code>, if you want to for example double the height of the thumbnails you can set it to <code>20</code>.</p>"},{"location":"rss-videos/#card-height","title":"<code>card-height</code>","text":"<p>Used to modify the height of cards when using the <code>horizontal-cards-2</code> style. The default value is <code>27</code> and the units are <code>rem</code>.</p>"},{"location":"rss-videos/#feeds","title":"<code>feeds</code>","text":"<p>An array of RSS/atom feeds. The title can optionally be changed.</p>"},{"location":"rss-videos/#properties-for-each-feed","title":"Properties for each feed","text":"Name Type Required Default Notes url string yes title string no the title provided by the feed hide-categories boolean no false Only applicable for <code>detailed-list</code> style hide-description boolean no false Only applicable for <code>detailed-list</code> style limit integer no item-link-prefix string no headers key (string) &amp; value (string) no"},{"location":"rss-videos/#limit_1","title":"<code>limit</code>","text":"<p>The maximum number of articles to show from that specific feed. Useful if you have a feed which posts a lot of articles frequently and you want to prevent it from excessively pushing down articles from other feeds.</p>"},{"location":"rss-videos/#item-link-prefix","title":"<code>item-link-prefix</code>","text":"<p>If an RSS feed isn't returning item links with a base domain and Glance has failed to automatically detect the correct domain you can manually add a prefix to each link with this property.</p>"},{"location":"rss-videos/#headers","title":"<code>headers</code>","text":"<p>Optionally specify the headers that will be sent with the request. Example:</p> <pre><code>- type: rss\n  feeds:\n    - url: https://domain.com/rss\n      headers:\n        User-Agent: Custom User Agent\n</code></pre>"},{"location":"rss-videos/#videos","title":"Videos","text":"<p>Display a list of the latest videos from specific YouTube channels.</p> <p>Example:</p> <pre><code>- type: videos\n  channels:\n    - UCXuqSBlHAE6Xw-yeJA0Tunw\n    - UCBJycsmduvYEL83R_U4JriQ\n    - UCHnyfMqiRRG1u-2MsSQLbXA\n</code></pre> <p>Preview: </p>"},{"location":"rss-videos/#properties_1","title":"Properties","text":"Name Type Required Default channels array yes playlists array no limit integer no 25 style string no horizontal-cards collapse-after integer no 7 collapse-after-rows integer no 4 include-shorts boolean no false video-url-template string no https://www.youtube.com/watch?v={VIDEO-ID}"},{"location":"rss-videos/#channels","title":"<code>channels</code>","text":"<p>A list of channels IDs.</p> <p>One way of getting the ID of a channel is going to the channel's page and clicking on its description:</p> <p></p> <p>Then scroll down and click on \"Share channel\", then \"Copy channel ID\":</p> <p></p>"},{"location":"rss-videos/#playlists","title":"<code>playlists</code>","text":"<p>A list of playlist IDs:</p> <pre><code>- type: videos\n  playlists:\n    - PL8mG-RkN2uTyZZ00ObwZxxoG_nJbs3qec\n    - PL8mG-RkN2uTxTK4m_Vl2dYR9yE41kRdBg\n</code></pre> <p>The playlist ID can be found in its link which is in the form of <pre><code>https://www.youtube.com...&amp;list={ID}&amp;...\n</code></pre></p>"},{"location":"rss-videos/#limit_2","title":"<code>limit</code>","text":"<p>The maximum number of videos to show.</p>"},{"location":"rss-videos/#collapse-after_1","title":"<code>collapse-after</code>","text":"<p>Specify the number of videos to show when using the <code>vertical-list</code> style before the \"SHOW MORE\" button appears.</p>"},{"location":"rss-videos/#collapse-after-rows","title":"<code>collapse-after-rows</code>","text":"<p>Specify the number of rows to show when using the <code>grid-cards</code> style before the \"SHOW MORE\" button appears.</p>"},{"location":"rss-videos/#style_1","title":"<code>style</code>","text":"<p>Used to change the appearance of the widget. Possible values are <code>horizontal-cards</code>, <code>vertical-list</code> and <code>grid-cards</code>.</p> <p>Preview of <code>vertical-list</code>:</p> <p></p> <p>Preview of <code>grid-cards</code>:</p> <p></p>"},{"location":"rss-videos/#video-url-template","title":"<code>video-url-template</code>","text":"<p>Used to replace the default link for videos. Useful when you're running your own YouTube front-end. Example:</p> <pre><code>video-url-template: https://invidious.your-domain.com/watch?v={VIDEO-ID}\n</code></pre> <p>Placeholders:</p> <p><code>{VIDEO-ID}</code> - the ID of the video</p>"},{"location":"search-group/","title":"Search & Group","text":""},{"location":"search-group/#search-widget","title":"Search Widget","text":"<p>Display a search bar that can be used to search for specific terms on various search engines.</p> <p>Example:</p> <pre><code>- type: search\n  search-engine: duckduckgo\n  bangs:\n    - title: YouTube\n      shortcut: \"!yt\"\n      url: https://www.youtube.com/results?search_query={QUERY}\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"search-group/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"Keys Action Condition S Focus the search bar Not already focused on another input field Enter Perform search in the same tab Search input is focused and not empty Ctrl + Enter Perform search in a new tab Search input is focused and not empty Escape Leave focus Search input is focused Up Insert the last search query since the page was opened into the input field Search input is focused <p>[!TIP]</p> <p>You can use the property <code>new-tab</code> with a value of <code>true</code> if you want to show search results in a new tab by default. Ctrl + Enter will then show results in the same tab.</p>"},{"location":"search-group/#properties","title":"Properties","text":"Name Type Required Default search-engine string no duckduckgo new-tab boolean no false autofocus boolean no false target string no _blank placeholder string no Type here to search\u2026 bangs array no"},{"location":"search-group/#search-engine","title":"<code>search-engine</code>","text":"<p>Either a value from the table below or a URL to a custom search engine. Use <code>{QUERY}</code> to indicate where the query value gets placed.</p> Name URL duckduckgo <code>https://duckduckgo.com/?q={QUERY}</code> google <code>https://www.google.com/search?q={QUERY}</code> bing <code>https://www.bing.com/search?q={QUERY}</code> perplexity <code>https://www.perplexity.ai/search?q={QUERY}</code> kagi <code>https://kagi.com/search?q={QUERY}</code> startpage <code>https://www.startpage.com/search?q={QUERY}</code>"},{"location":"search-group/#new-tab","title":"<code>new-tab</code>","text":"<p>When set to <code>true</code>, swaps the shortcuts for showing results in the same or new tab, defaulting to showing results in a new tab.</p>"},{"location":"search-group/#autofocus","title":"<code>autofocus</code>","text":"<p>When set to <code>true</code>, automatically focuses the search input on page load.</p>"},{"location":"search-group/#target","title":"<code>target</code>","text":"<p>The target to use when opening the search results in a new tab. Possible values are <code>_blank</code>, <code>_self</code>, <code>_parent</code> and <code>_top</code>.</p>"},{"location":"search-group/#placeholder","title":"<code>placeholder</code>","text":"<p>When set, modifies the text displayed in the input field before typing.</p>"},{"location":"search-group/#bangs","title":"<code>bangs</code>","text":"<p>What now? Bangs. They're shortcuts that allow you to use the same search box for many different sites. Assuming you have it configured, if for example you start your search input with <code>!yt</code> you'd be able to perform a search on YouTube:</p> <p></p>"},{"location":"search-group/#properties-for-each-bang","title":"Properties for each bang","text":"Name Type Required title string no shortcut string yes url string yes"},{"location":"search-group/#title","title":"<code>title</code>","text":"<p>Optional title that will appear on the right side of the search bar when the query starts with the associated shortcut.</p>"},{"location":"search-group/#shortcut","title":"<code>shortcut</code>","text":"<p>Any value you wish to use as the shortcut for the search engine. It does not have to start with <code>!</code>.</p> <p>[!IMPORTANT]</p> <p>In YAML some characters have special meaning when placed in the beginning of a value. If your shortcut starts with <code>!</code> (and potentially some other special characters) you'll have to wrap the value in quotes: <code>yaml shortcut: \"!yt\"</code></p>"},{"location":"search-group/#url","title":"<code>url</code>","text":"<p>The URL of the search engine. Use <code>{QUERY}</code> to indicate where the query value gets placed. Examples:</p> <pre><code>url: https://www.reddit.com/search?q={QUERY}\nurl: https://store.steampowered.com/search/?term={QUERY}\nurl: https://www.amazon.com/s?k={QUERY}\n</code></pre>"},{"location":"search-group/#group","title":"Group","text":"<p>Group multiple widgets into one using tabs. Widgets are defined using a <code>widgets</code> property exactly as you would on a page column. The only limitation is that you cannot place a group widget or a split column widget within a group widget.</p> <p>Example:</p> <pre><code>- type: group\n  widgets:\n    - type: reddit\n      subreddit: gamingnews\n      show-thumbnails: true\n      collapse-after: 6\n    - type: reddit\n      subreddit: games\n    - type: reddit\n      subreddit: pcgaming\n      show-thumbnails: true\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"search-group/#sharing-properties","title":"Sharing properties","text":"<p>To avoid repetition you can use YAML anchors and share properties between widgets.</p> <p>Example:</p> <pre><code>- type: group\n  define: &amp;shared-properties\n      type: reddit\n      show-thumbnails: true\n      collapse-after: 6\n  widgets:\n    - subreddit: gamingnews\n      &lt;&lt;: *shared-properties\n    - subreddit: games\n      &lt;&lt;: *shared-properties\n    - subreddit: pcgaming\n      &lt;&lt;: *shared-properties\n</code></pre>"},{"location":"server-stats/","title":"Server Stats","text":""},{"location":"server-stats/#server-stats","title":"Server Stats","text":"<p>Display statistics such as CPU usage, memory usage and disk usage of the server Glance is running on or other servers.</p> <p>Example:</p> <pre><code>- type: server-stats\n  servers:\n    - type: local\n      name: Services\n</code></pre> <p>Preview:</p> <p></p> <p>[!NOTE]</p> <p>This widget is currently under development, some features might not function as expected or may change.</p> <p>To display data from a remote server you need to have the Glance Agent running on that server. You can download the agent from here, though keep in mind that it is still in development and may not work as expected. Support for other providers such as Glances will be added in the future.</p> <p>In the event that the CPU temperature goes over 80\u00b0C, a flame icon will appear next to the CPU. The progress indicators will also turn red (or the equivalent of your negative color) to hopefully grab your attention if anything is unusually high:</p> <p></p>"},{"location":"server-stats/#properties","title":"Properties","text":"Name Type Required Default servers array no"},{"location":"server-stats/#servers","title":"<code>servers</code>","text":"<p>If not provided it will display the statistics of the server Glance is running on.</p>"},{"location":"server-stats/#properties-for-both-local-and-remote-servers","title":"Properties for both <code>local</code> and <code>remote</code> servers","text":"Name Type Required Default type string yes name string no hide-swap boolean no false"},{"location":"server-stats/#type","title":"<code>type</code>","text":"<p>Whether to display statistics for the local server or a remote server. Possible values are <code>local</code> and <code>remote</code>.</p>"},{"location":"server-stats/#name","title":"<code>name</code>","text":"<p>The name of the server which will be displayed on the widget. If not provided it will default to the server's hostname.</p>"},{"location":"server-stats/#hide-swap","title":"<code>hide-swap</code>","text":"<p>Whether to hide the swap usage.</p>"},{"location":"server-stats/#properties-for-the-local-server","title":"Properties for the <code>local</code> server","text":"Name Type Required Default cpu-temp-sensor string no hide-mountpoints-by-default boolean no false mountpoints map[string]object no"},{"location":"server-stats/#cpu-temp-sensor","title":"<code>cpu-temp-sensor</code>","text":"<p>The name of the sensor to use for the CPU temperature. When not provided the widget will attempt to find the correct one, if it fails to do so the temperature will not be displayed. To view the available sensors you can use <code>sensors</code> command.</p>"},{"location":"server-stats/#hide-mountpoints-by-default","title":"<code>hide-mountpoints-by-default</code>","text":"<p>If set to <code>true</code> you'll have to manually make each mountpoint visible by adding a <code>hide: false</code> property to it like so:</p> <pre><code>- type: server-stats\n  servers:\n    - type: local\n      hide-mountpoints-by-default: true\n      mountpoints:\n        \"/\":\n          hide: false\n        \"/mnt/data\":\n          hide: false\n</code></pre> <p>This is useful if you're running Glance inside of a container which usually mounts a lot of irrelevant filesystems.</p>"},{"location":"server-stats/#mountpoints","title":"<code>mountpoints</code>","text":"<p>A map of mountpoints to display disk usage for. The key is the path to the mountpoint and the value is an object with optional properties. Example:</p> <pre><code>mountpoints:\n  \"/\":\n    name: Root\n  \"/mnt/data\":\n    name: Data\n  \"/boot/efi\":\n    hide: true\n</code></pre>"},{"location":"server-stats/#properties-for-each-mountpoint","title":"Properties for each <code>mountpoint</code>","text":"Name Type Required Default name string no hide boolean no false"},{"location":"server-stats/#name_1","title":"<code>name</code>","text":"<p>The name of the mountpoint which will be displayed on the widget. If not provided it will default to the mountpoint's path.</p>"},{"location":"server-stats/#hide","title":"<code>hide</code>","text":"<p>Whether to hide this mountpoint from the widget.</p>"},{"location":"server-stats/#properties-for-remote-servers","title":"Properties for <code>remote</code> servers","text":"Name Type Required Default url string yes token string no timeout string no 3s"},{"location":"server-stats/#url","title":"<code>url</code>","text":"<p>The URL and port of the server to fetch the statistics from.</p>"},{"location":"server-stats/#token","title":"<code>token</code>","text":"<p>The authentication token to use when fetching the statistics.</p>"},{"location":"server-stats/#timeout","title":"<code>timeout</code>","text":"<p>The maximum time to wait for a response from the server. The value is a string and must be a number followed by one of s, m, h, d. Example: <code>10s</code> for 10 seconds, <code>1m</code> for 1 minute, etc</p>"},{"location":"server/","title":"Server","text":""},{"location":"server/#server","title":"Server","text":"<p>Server configuration is done through a top level <code>server</code> property. Example:</p> <pre><code>server:\n  port: 8080\n  assets-path: /home/user/glance-assets\n</code></pre>"},{"location":"server/#properties","title":"Properties","text":"Name Type Required Default host string no port number no 8080 proxied boolean no false base-url string no assets-path string no"},{"location":"server/#host","title":"<code>host</code>","text":"<p>The address which the server will listen on. Setting it to <code>localhost</code> means that only the machine that the server is running on will be able to access the dashboard. By default it will listen on all interfaces.</p>"},{"location":"server/#port","title":"<code>port</code>","text":"<p>A number between 1 and 65,535, so long as that port isn't already used by anything else.</p>"},{"location":"server/#proxied","title":"<code>proxied</code>","text":"<p>Set to <code>true</code> if you're using a reverse proxy in front of Glance. This will make Glance use the <code>X-Forwarded-*</code> headers to determine the original request details.</p>"},{"location":"server/#base-url","title":"<code>base-url</code>","text":"<p>The base URL that Glance is hosted under. No need to specify this unless you're using a reverse proxy and are hosting Glance under a directory. If that's the case then you can set this value to <code>/glance</code> or whatever the directory is called. Note that the forward slash (<code>/</code>) in the beginning is required unless you specify the full domain and path.</p> <p>[!IMPORTANT] You need to strip the <code>base-url</code> prefix before forwarding the request to the Glance server. In Caddy you can do this using <code>handle_path</code> or <code>uri strip_prefix</code>.</p>"},{"location":"server/#assets-path","title":"<code>assets-path</code>","text":"<p>The path to a directory that will be served by the server under the <code>/assets/</code> path. This is handy for widgets like the Monitor where you have to specify an icon URL and you want to self host all the icons rather than pointing to an external source.</p> <p>[!IMPORTANT]</p> <p>When installing through docker the path will point to the files inside the container. Don't forget to mount your assets path to the same path inside the container. Example:</p> <p>If your assets are in: <pre><code>/home/user/glance-assets\n</code></pre></p> <p>You should mount: <pre><code>/home/user/glance-assets:/app/assets\n</code></pre></p> <p>And your config should contain: <pre><code>assets-path: /app/assets\n</code></pre></p>"},{"location":"server/#examples","title":"Examples","text":"<p>Say you have a directory <code>glance-assets</code> with a file <code>gitea-icon.png</code> in it and you specify your assets path like:</p> <pre><code>assets-path: /home/user/glance-assets\n</code></pre> <p>To be able to point to an asset from your assets path, use the <code>/assets/</code> path like such:</p> <pre><code>icon: /assets/gitea-icon.png\n</code></pre>"},{"location":"split-column/","title":"Split Column","text":""},{"location":"split-column/#split-column","title":"Split Column","text":"<p>Splits a full sized column in half, allowing you to place widgets side by side horizontally. This is converted to a single column on mobile devices or if not enough width is available. Widgets are defined using a <code>widgets</code> property exactly as you would on a page column.</p> <p>Two widgets side by side in a <code>full</code> column:</p> <p></p> View <code>glance.yml</code> <pre><code># ...\n- size: full\n  widgets:\n    - type: split-column\n      widgets:\n        - type: hacker-news\n          collapse-after: 3\n        - type: lobsters\n          collapse-after: 3\n\n    - type: videos\n# ...\n</code></pre> <p></p> <p>You can also achieve a number of different full page layouts using just this widget, such as:</p> <p>3 column layout where all columns have equal width:</p> <p></p> View <code>glance.yml</code> <pre><code>pages:\n  - name: Home\n    columns:\n      - size: full\n        widgets:\n          - type: split-column\n            max-columns: 3\n            widgets:\n              - type: reddit\n                subreddit: selfhosted\n                collapse-after: 15\n              - type: reddit\n                subreddit: homelab\n                collapse-after: 15\n              - type: reddit\n                subreddit: sysadmin\n                collapse-after: 15\n</code></pre> <p></p> <p>4 column layout where all columns have equal width (and the page is set to <code>width: wide</code>):</p> <p></p> View <code>glance.yml</code> <pre><code>pages:\n  - name: Home\n    width: wide\n    columns:\n      - size: full\n        widgets:\n          - type: split-column\n            max-columns: 4\n            widgets:\n              - type: reddit\n                subreddit: selfhosted\n                collapse-after: 15\n              - type: reddit\n                subreddit: homelab\n                collapse-after: 15\n              - type: reddit\n                subreddit: linux\n                collapse-after: 15\n              - type: reddit\n                subreddit: sysadmin\n                collapse-after: 15\n</code></pre> <p></p> <p>Masonry layout with up to 5 columns where all columns have equal width (and the page is set to <code>width: wide</code>):</p> <p></p> View <code>glance.yml</code> <pre><code>define:\n  - &amp;subreddit-settings\n    type: reddit\n    collapse-after: 5\n\npages:\n  - name: Home\n    width: wide\n    columns:\n      - size: full\n        widgets:\n          - type: split-column\n            max-columns: 5\n            widgets:\n              - subreddit: selfhosted\n                &lt;&lt;: *subreddit-settings\n              - subreddit: homelab\n                &lt;&lt;: *subreddit-settings\n              - subreddit: linux\n                &lt;&lt;: *subreddit-settings\n              - subreddit: sysadmin\n                &lt;&lt;: *subreddit-settings\n              - subreddit: DevOps\n                &lt;&lt;: *subreddit-settings\n              - subreddit: Networking\n                &lt;&lt;: *subreddit-settings\n              - subreddit: DataHoarding\n                &lt;&lt;: *subreddit-settings\n              - subreddit: OpenSource\n                &lt;&lt;: *subreddit-settings\n              - subreddit: Privacy\n                &lt;&lt;: *subreddit-settings\n              - subreddit: FreeSoftware\n                &lt;&lt;: *subreddit-settings\n</code></pre> <p></p> <p>Just like the <code>group</code> widget, you can insert any widget type, you can even insert a <code>group</code> widget inside of a <code>split-column</code> widget, but you can't insert a <code>split-column</code> widget inside of a <code>group</code> widget.</p>"},{"location":"themes/","title":"Themes","text":""},{"location":"themes/#dark","title":"Dark","text":""},{"location":"themes/#teal-city","title":"Teal City","text":"<p> <pre><code>theme:\n  background-color: 225 14 15\n  primary-color: 157 47 65\n  contrast-multiplier: 1.1\n</code></pre></p>"},{"location":"themes/#catppuccin-frappe","title":"Catppuccin Frappe","text":"<p> <pre><code>theme:\n  background-color: 229 19 23\n  contrast-multiplier: 1.2\n  primary-color: 222 74 74\n  positive-color: 96 44 68\n  negative-color: 359 68 71\n</code></pre></p>"},{"location":"themes/#catppuccin-macchiato","title":"Catppuccin Macchiato","text":"<p> <pre><code>theme:\n  background-color: 232 23 18\n  contrast-multiplier: 1.2\n  primary-color: 220 83 75\n  positive-color: 105 48 72\n  negative-color: 351 74 73\n</code></pre></p>"},{"location":"themes/#catppuccin-mocha","title":"Catppuccin Mocha","text":"<p> <pre><code>theme:\n  background-color: 240 21 15\n  contrast-multiplier: 1.2\n  primary-color: 217 92 83\n  positive-color: 115 54 76\n  negative-color: 347 70 65\n</code></pre></p>"},{"location":"themes/#camouflage","title":"Camouflage","text":"<p> <pre><code>theme:\n  background-color: 186 21 20\n  contrast-multiplier: 1.2\n  primary-color: 97 13 80\n</code></pre></p>"},{"location":"themes/#gruvbox-dark","title":"Gruvbox Dark","text":"<p> <pre><code>theme:\n  background-color: 0 0 16\n  primary-color: 43 59 81\n  positive-color: 61 66 44\n  negative-color: 6 96 59\n</code></pre></p>"},{"location":"themes/#kanagawa-dark","title":"Kanagawa Dark","text":"<p> <pre><code>theme:\n  background-color: 240 13 14\n  primary-color: 51 33 68\n  negative-color: 358 100 68\n  contrast-multiplier: 1.2\n</code></pre></p>"},{"location":"themes/#tucan","title":"Tucan","text":"<p> <pre><code>theme:\n  background-color: 50 1 6\n  primary-color: 24 97 58\n  negative-color: 209 88 54\n</code></pre></p>"},{"location":"themes/#dracula","title":"Dracula","text":"<p> <pre><code>theme:\n  background-color: 231 15 21\n  primary-color: 265 89 79\n  contrast-multiplier: 1.2\n  positive-color: 135 94 66\n  negative-color: 0 100 67\n</code></pre></p>"},{"location":"themes/#light","title":"Light","text":""},{"location":"themes/#catppuccin-latte","title":"Catppuccin Latte","text":"<p> <pre><code>theme:\n  light: true\n  background-color: 220 23 95\n  contrast-multiplier: 1.0\n  primary-color: 220 91 54\n  positive-color: 109 58 40\n  negative-color: 347 87 44\n</code></pre></p>"},{"location":"themes/#peachy","title":"Peachy","text":"<p> <pre><code>theme:\n  light: true\n  background-color: 28 40 77\n  primary-color: 155 100 20\n  negative-color: 0 100 60\n  contrast-multiplier: 1.1\n  text-saturation-multiplier: 0.5\n</code></pre></p>"},{"location":"themes/#zebra","title":"Zebra","text":"<p> <pre><code>theme:\n  light: true\n  background-color: 0 0 95\n  primary-color: 0 0 10\n  negative-color: 0 90 50\n</code></pre></p>"},{"location":"twitch/","title":"Twitch","text":""},{"location":"twitch/#twitch-channels","title":"Twitch Channels","text":"<p>Display a list of channels from Twitch.</p> <p>Example:</p> <pre><code>- type: twitch-channels\n  channels:\n    - jembawls\n    - giantwaffle\n    - asmongold\n    - cohhcarnage\n    - j_blow\n    - xQc\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"twitch/#properties","title":"Properties","text":"Name Type Required Default channels array yes collapse-after integer no 5 sort-by string no viewers"},{"location":"twitch/#channels","title":"<code>channels</code>","text":"<p>A list of channels to display.</p>"},{"location":"twitch/#collapse-after","title":"<code>collapse-after</code>","text":"<p>How many channels are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"twitch/#sort-by","title":"<code>sort-by</code>","text":"<p>Can be used to specify the order in which the channels are displayed. Possible values are <code>viewers</code> and <code>live</code>.</p>"},{"location":"twitch/#twitch-top-games","title":"Twitch top games","text":"<p>Display a list of games with the most viewers on Twitch.</p> <p>Example:</p> <pre><code>- type: twitch-top-games\n  exclude:\n    - just-chatting\n    - pools-hot-tubs-and-beaches\n    - music\n    - art\n    - asmr\n</code></pre> <p>Preview:</p> <p></p>"},{"location":"twitch/#properties_1","title":"Properties","text":"Name Type Required Default exclude array no limit integer no 10 collapse-after integer no 5"},{"location":"twitch/#exclude","title":"<code>exclude</code>","text":"<p>A list of categories that will never be shown. You must provide the slug found by clicking on the category and looking at the URL:</p> <pre><code>https://www.twitch.tv/directory/category/grand-theft-auto-v\n                                         ^^^^^^^^^^^^^^^^^^\n</code></pre>"},{"location":"twitch/#limit","title":"<code>limit</code>","text":"<p>The maximum number of games to show.</p>"},{"location":"twitch/#collapse-after_1","title":"<code>collapse-after</code>","text":"<p>How many games are visible before the \"SHOW MORE\" button appears. Set to <code>-1</code> to never collapse.</p>"},{"location":"v0.7.0-upgrade/","title":"Version 0.7.0 Upgrade","text":""},{"location":"v0.7.0-upgrade/#upgrading-to-v070-from-previous-versions","title":"Upgrading to v0.7.0 from previous versions","text":"<p>In essence, the <code>glance.yml</code> file has been moved from the root of the project to a <code>config/</code> directory and you now need to mount that directory to <code>/app/config</code> in the container.</p>"},{"location":"v0.7.0-upgrade/#before","title":"Before","text":"<p>Versions before v0.7.0 used a <code>docker-compose.yml</code> that looked like the following:</p> <pre><code>services:\n  glance:\n    image: glanceapp/glance\n    volumes:\n      - ./glance.yml:/app/glance.yml\n    ports:\n      - 8080:8080\n</code></pre> <p>And expected you to have the following directory structure:</p> <pre><code>glance/\n    docker-compose.yml\n    glance.yml\n</code></pre>"},{"location":"v0.7.0-upgrade/#after","title":"After","text":"<p>With the release of v0.7.0, the recommended <code>docker-compose.yml</code> looks like the following:</p> <pre><code>services:\n  glance:\n    container_name: glance\n    image: glanceapp/glance\n    volumes:\n      - ./config:/app/config\n    ports:\n      - 8080:8080\n</code></pre> <p>And expects you to have the following directory structure:</p> <pre><code>glance/\n    docker-compose.yml\n    config/\n        glance.yml\n</code></pre>"},{"location":"v0.7.0-upgrade/#why-this-change-was-necessary","title":"Why this change was necessary","text":"<ol> <li>Mounting a file rather than a directory is not common practice and leads to some issues, such as creating a directory if the file is not present, which has tripped up multiple people and caused unnecessary confusion</li> <li>v0.7.0 added automatic reloads when the configuration file changes, which based on testing didn't work when mounting a single file</li> <li>v0.7.0 added the ability to include config files, so you'd have to make this change anyways if you wanted to take advantage of that feature</li> </ol> <p>Taking all of these into account, it felt like the right time to implement the change.</p>"},{"location":"weather-todo/","title":"Weather & Todo","text":""},{"location":"weather-todo/#weather","title":"Weather","text":"<p>Display weather information for a specific location. The data is provided by https://open-meteo.com/.</p> <p>Example:</p> <pre><code>- type: weather\n  units: metric\n  hour-format: 12h\n  location: London, United Kingdom\n</code></pre> <p>[!NOTE]</p> <p>US cities which have common names can have their state specified as the second parameter as such:</p> <ul> <li>Greenville, North Carolina, United States</li> <li>Greenville, South Carolina, United States</li> <li>Greenville, Mississippi, United States</li> </ul> <p>Preview:</p> <p></p> <p>Each bar represents a 2 hour interval. The yellow background represents sunrise and sunset. The blue dots represent the times of the day where there is a high chance for precipitation. You can hover over the bars to view the exact temperature for that time.</p>"},{"location":"weather-todo/#properties","title":"Properties","text":"Name Type Required Default location string yes units string no metric hour-format string no 12h hide-location boolean no false show-area-name boolean no false"},{"location":"weather-todo/#location","title":"<code>location</code>","text":"<p>The name of the city and country to fetch weather information for. Attempting to launch the applcation with an invalid location will result in an error. You can use the gecoding API page to search for your specific location. Glance will use the first result from the list if there are multiple.</p>"},{"location":"weather-todo/#units","title":"<code>units</code>","text":"<p>Whether to show the temperature in celsius or fahrenheit, possible values are <code>metric</code> or <code>imperial</code>.</p>"},{"location":"weather-todo/#hour-format","title":"<code>hour-format</code>","text":"<p>Whether to show the hours of the day in 12-hour format or 24-hour format. Possible values are <code>12h</code> and <code>24h</code>.</p>"},{"location":"weather-todo/#hide-location","title":"<code>hide-location</code>","text":"<p>Optionally don't display the location name on the widget.</p>"},{"location":"weather-todo/#show-area-name","title":"<code>show-area-name</code>","text":"<p>Whether to display the state/administrative area in the location name. If set to <code>true</code> the location will be displayed as:</p> <pre><code>Greenville, North Carolina, United States\n</code></pre> <p>Otherwise, if set to <code>false</code> (which is the default) it'll be displayed as:</p> <pre><code>Greenville, United States\n</code></pre>"},{"location":"weather-todo/#todo","title":"Todo","text":"<p>A simple to-do list that allows you to add, edit and delete tasks. The tasks are stored in the browser's local storage.</p> <p>Example:</p> <pre><code>- type: to-do\n</code></pre> <p>Preview:</p> <p></p> <p>To reorder tasks, drag and drop them by grabbing the top side of the task:</p> <p></p> <p>To delete a task, hover over it and click on the trash icon.</p>"},{"location":"weather-todo/#properties_1","title":"Properties","text":"Name Type Required Default id string no"},{"location":"weather-todo/#id","title":"<code>id</code>","text":"<p>The ID of the todo list. If you want to have multiple todo lists, you must specify a different ID for each one. The ID is used to store the tasks in the browser's local storage. This means that if you have multiple todo lists with the same ID, they will share the same tasks.</p>"},{"location":"weather-todo/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"Keys Action Condition Enter Add a task to the bottom of the list When the \"Add a task\" field is focused Ctrl + Enter Add a task to the top of the list When the \"Add a task\" field is focused Down Arrow Focus the last task that was added When the \"Add a task\" field is focused Escape Focus the \"Add a task\" field When a task is focused"},{"location":"widgets/","title":"Basics","text":""},{"location":"widgets/#widgets","title":"Widgets","text":"<p>Widgets are defined for each column using a <code>widgets</code> property. Example:</p> <pre><code>pages:\n  - name: Home\n    columns:\n      - size: small\n        widgets:\n          - type: weather\n            location: London, United Kingdom\n</code></pre> <p>[!NOTE]</p> <p>Currently not all widgets are designed to fit every column size, however some widgets offer different \"styles\" that help alleviate this limitation.</p>"},{"location":"widgets/#shared-properties","title":"Shared Properties","text":"Name Type Required type string yes title string no title-url string no hide-header boolean no cache string no css-class string no"},{"location":"widgets/#type","title":"<code>type</code>","text":"<p>Used to specify the widget.</p>"},{"location":"widgets/#title","title":"<code>title</code>","text":"<p>The title of the widget. If left blank it will be defined by the widget.</p>"},{"location":"widgets/#title-url","title":"<code>title-url</code>","text":"<p>The URL to go to when clicking on the widget's title. If left blank it will be defined by the widget (if available).</p>"},{"location":"widgets/#hide-header","title":"<code>hide-header</code>","text":"<p>When set to <code>true</code>, the header (title) of the widget will be hidden. You cannot hide the header of the group widget.</p> <p>[!NOTE]</p> <p>If a widget fails to update, a red dot or circle is shown next to the title of that widget indicating that the it is not working. You will not be able to see this if you hide the header.</p>"},{"location":"widgets/#cache","title":"<code>cache</code>","text":"<p>How long to keep the fetched data in memory. The value is a string and must be a number followed by one of s, m, h, d. Examples:</p> <pre><code>cache: 30s # 30 seconds\ncache: 5m  # 5 minutes\ncache: 2h  # 2 hours\ncache: 1d  # 1 day\n</code></pre> <p>[!NOTE]</p> <p>Not all widgets can have their cache duration modified. The calendar and weather widgets update on the hour and this cannot be changed.</p>"},{"location":"widgets/#css-class","title":"<code>css-class</code>","text":"<p>Set custom CSS classes for the specific widget instance.</p>"}]}